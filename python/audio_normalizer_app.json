{
  "name": "audio-normalizer",
  "title": "Audio Normalizer",
  "description": "Normalize audio volume levels to a consistent loudness",
  "content": "<h3 class=\"heading-node\">Overview</h3><p class=\"text-node\">This application normalizes audio volume levels to ensure consistent loudness across different audio files. Built using <a class=\"link\" href=\"https://github.com/jiaaro/pydub\" target=\"_blank\">pydub</a>, it applies professional audio normalization techniques to bring audio to a target volume level.</p><h3 class=\"heading-node\">Features</h3><ul class=\"list-node\"><li class=\"list-item-node\">Normalize audio to consistent volume levels</li><li class=\"list-item-node\">Adjustable target loudness (dBFS)</li><li class=\"list-item-node\">Prevents audio clipping with warnings</li><li class=\"list-item-node\">Preserves original audio format and quality</li><li class=\"list-item-node\">Works with multiple audio formats (MP3, WAV, FLAC, OGG, etc.)</li></ul><h3 class=\"heading-node\">Parameters</h3><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Input Audio</strong>: Upload your audio file from stash</li><li class=\"list-item-node\"><strong>Output Directory</strong>: Select or create a stash folder for output</li></ul><h3 class=\"heading-node\">Technical Details</h3><p class=\"text-node\">The normalization process:</p><ol class=\"list-node\"><li class=\"list-item-node\">Analyzes the audio to find peak and RMS (average) loudness levels</li><li class=\"list-item-node\">Applies normalization to bring audio to a consistent level</li><li class=\"list-item-node\">Adjusts to target dBFS of -20.0 (optimal for most use cases)</li><li class=\"list-item-node\">Checks for potential clipping and warns if detected</li></ol><h3 class=\"heading-node\">Output</h3><p class=\"text-node\">The application generates a normalized audio file with \"_normalized\" appended to the original filename in the specified output directory.</p><h3 class=\"heading-node\">Use Cases</h3><ul class=\"list-node\"><li class=\"list-item-node\">Standardizing volume levels across multiple audio files</li><li class=\"list-item-node\">Preparing audio for podcast production</li><li class=\"list-item-node\">Fixing audio recordings with inconsistent volume</li><li class=\"list-item-node\">Ensuring consistent playback levels in playlists</li><li class=\"list-item-node\">Preparing audio for broadcast or streaming</li></ul>",
  "command": "REPO_DIR=\"prod_apps_$(date +%s%N)\"; rm -rf \"$REPO_DIR\" 2>/dev/null || true; git clone https://github.com/CamberCloud-Inc/prod_apps.git \"$REPO_DIR\" && apt-get update && apt-get install -y ffmpeg && python \"$REPO_DIR/python/audio_normalizer.py\" \"${inputFile}\" -o \"${outputDir}\" -t -20.0",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input Audio",
      "description": "Upload the audio file you want to normalize",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Select or create a stash folder where the normalized audio will be saved",
      "defaultValue": "./"
    }
  ]
}