{
  "name": "biomni-estimate-alpha-particle-radiotherapy-dosimetry",
  "title": "Biomni: Estimate Alpha Particle Radiotherapy Dosimetry",
  "description": "Estimates alpha particle radiotherapy dosimetry for targeted radionuclide therapy",
  "content": "<h3>Overview</h3><p>Estimates alpha particle radiotherapy dosimetry for targeted radionuclide therapy (TRT). Calculates absorbed doses to tumors and organs at risk, enabling optimization of therapeutic ratios for alpha-emitting radiopharmaceuticals.</p><h3>Input Parameters</h3><ul><li><strong>biodistribution_data</strong> (required): Dictionary of tissue uptake data (% ID/g over time)</li><li><strong>radiation_parameters</strong> (required): Alpha particle emission properties (energy, half-life, branching ratio)</li><li><strong>output_file</strong> (optional): CSV filename for dosimetry results (default: 'dosimetry_results.csv')</li></ul><h3>Biological Use Case</h3><p>Critical for alpha-particle radiotherapy planning and safety assessment. Used in development of targeted alpha therapy (TAT) for cancer treatment, particularly for hematologic malignancies and solid tumors. Enables calculation of therapeutic index, prediction of normal tissue toxicity, and optimization of administered activity.</p><h3>Output</h3><p>Comprehensive dosimetry report with absorbed doses (Gy), dose rates, and tumor-to-organ ratios saved to dosimetry_results.txt</p><h3>Category</h3><p>pharmacology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/pharmacology/estimate_alpha_particle_radiotherapy_dosimetry.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}