{
  "name": "biomni-query-fda-adverse-events",
  "title": "Biomni: Query FDA Adverse Events",
  "description": "Queries FDA adverse events database (FAERS) for drug safety information",
  "content": "<h3>Overview</h3><p>Queries FDA adverse events database (FAERS) for drug safety information, providing detailed reports of adverse events, patient outcomes, and temporal patterns. Supports pharmacovigilance and post-market surveillance.</p><h3>Input Parameters</h3><ul><li><strong>drug_name</strong> (required): Name of drug to query for adverse events</li><li><strong>date_range</strong> (optional): Tuple or list of two dates to filter reports (e.g., [\"2020-01-01\", \"2023-12-31\"])</li><li><strong>severity_filter</strong> (optional): Filter by event severity (serious, non-serious)</li><li><strong>outcome_filter</strong> (optional): Filter by patient outcome (death, hospitalization, disability, life-threatening)</li><li><strong>limit</strong> (optional): Maximum number of reports to retrieve (default: 100)</li></ul><h3>Biological Use Case</h3><p>Critical for post-market drug safety surveillance and risk assessment. Identifies emerging safety signals, characterizes adverse event profiles, and supports benefit-risk evaluations. Used by regulatory agencies, pharmaceutical companies, and healthcare providers to monitor drug safety and inform prescribing decisions.</p><h3>Output</h3><p>Adverse event report with case summaries, event frequencies, temporal trends, patient demographics, and outcome statistics saved to fda_adverse_events_results.txt</p><h3>Category</h3><p>pharmacology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/pharmacology/query_fda_adverse_events.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}