{
  "name": "biomni-grade-adverse-events-using-vcog-ctcae",
  "title": "Biomni: Grade Adverse Events Using Vcog Ctcae",
  "description": "Grades adverse events using VCOG-CTCAE (Veterinary Cooperative Oncology Group - Common Terminology Criteria for Adverse Events) criteria",
  "content": "<h3>Overview</h3><p>Grades adverse events using VCOG-CTCAE (Veterinary Cooperative Oncology Group - Common Terminology Criteria for Adverse Events) criteria. Standardizes severity assessment of adverse events in veterinary oncology trials and clinical practice.</p><h3>Input Parameters</h3><ul><li><strong>clinical_data_file</strong> (required): Path to CSV file containing clinical observations and adverse event data</li></ul><h3>Input Format</h3><pre>{\n  \"clinical_data_file\": \"/path/to/clinical_data.csv\"\n}</pre><h3>Biological Use Case</h3><p>Essential for standardized toxicity assessment in veterinary oncology research and companion animal drug development. Enables consistent grading of adverse events (Grade 1-5) across studies, facilitates comparison of treatment toxicity profiles, and supports regulatory submissions for veterinary pharmaceuticals. Critical for optimizing therapeutic index in veterinary oncology.</p><h3>Output</h3><p>Graded adverse events report with VCOG-CTCAE severity scores, affected organ systems, and clinical significance saved to adverse_events_grading_results.txt</p><h3>Category</h3><p>pharmacology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/pharmacology/grade_adverse_events_using_vcog_ctcae.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}