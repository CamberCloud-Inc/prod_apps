{
  "name": "biomni-predict-binding-affinity-protein-1d-sequence",
  "title": "Biomni: Predict Binding Affinity Protein 1D Sequence",
  "description": "Predicts protein-ligand binding affinity using amino acid sequence",
  "content": "<h3>Overview</h3><p>Predicts protein-ligand binding affinity using only the amino acid sequence (1D structure) of the target protein. Enables rapid affinity predictions without requiring 3D structural data, useful for novel targets and virtual screening.</p><h3>Input Parameters</h3><ul><li><strong>smiles_list</strong> (required): List of compound SMILES strings to evaluate</li><li><strong>amino_acid_sequence</strong> (required): Target protein amino acid sequence in single-letter code</li><li><strong>affinity_model_type</strong> (optional): Model architecture (default: 'MPNN-CNN' for ligand-protein modeling)</li></ul><h3>Biological Use Case</h3><p>Valuable for early-stage drug discovery when protein structures are unavailable (e.g., membrane proteins, disordered regions, novel targets). Enables sequence-based virtual screening, lead identification, and affinity ranking without crystallography or cryo-EM data. Particularly useful for kinase inhibitor design and GPCR-targeted drug discovery.</p><h3>Output</h3><p>Predicted binding affinities (Kd or IC50 estimates) for each ligand-protein pair with confidence scores saved to binding_affinity_results.txt</p><h3>Category</h3><p>pharmacology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/pharmacology/predict_binding_affinity_protein_1d_sequence.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}