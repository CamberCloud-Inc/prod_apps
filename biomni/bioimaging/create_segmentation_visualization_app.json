{
  "name": "biomni-create-segmentation-visualization",
  "title": "Biomni: Create Segmentation Visualization",
  "description": "Create and save visualization of segmentation results using nilearn",
  "content": "<h3>Overview</h3><p>Visual inspection of segmentation results is essential for quality assurance and scientific communication in medical imaging. This tool generates comprehensive visualizations overlaying segmentation masks on original MRI images using nilearn, producing multi-slice views, 3D renderings, and statistical plots. These visualizations enable rapid assessment of segmentation quality, identification of errors, and creation of publication-ready figures that communicate anatomical or pathological findings effectively.</p><h3>Input Parameters</h3><ul><li><strong>original_mri</strong> (string, required): Path to the original MRI image file in NIfTI format (.nii or .nii.gz) that was segmented</li><li><strong>segmentation</strong> (string, required): Path to the segmentation mask file in NIfTI format (.nii or .nii.gz) containing labeled regions</li><li><strong>output_dir</strong> (string, optional): Directory where visualization images will be saved. Default: './visualization_output'</li></ul><h3>Biological Use Case</h3><p>Segmentation visualization is critical in neuro-oncology for displaying tumor boundaries and sub-regions on patient MRI scans, enabling clinicians to assess treatment planning accuracy. In neuroscience research, it helps visualize brain parcellations and cortical/subcortical structures for anatomical studies. For cardiac imaging, it shows myocardial segmentation and chamber delineations. In pathology research, it enables validation of automated segmentations by overlaying predicted regions on original images, facilitating comparison with manual annotations. These visualizations are essential for manuscript figures, clinical reports, and team discussions about segmentation quality and biological interpretation.</p><h3>Output</h3><p>Returns a parameters (visualization_results.json) containing paths to generated visualization files. The output directory includes multi-planar view images showing axial, sagittal, and coronal slices with segmentation overlays, contour plots highlighting region boundaries, and optionally 3D surface renderings of segmented structures. All visualizations use perceptually uniform colormaps and include appropriate legends and anatomical orientation markers for clear interpretation.</p><h3>Category</h3><p>bioimaging</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/bioimaging/create_segmentation_visualization.py --original_mri \"${original_mri}\" --segmentation \"${segmentation}\" --output_dir \"${output_dir}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "original_mri",
      "label": "Original MRI",
      "description": "Path to the original MRI image file in NIfTI format",
      "defaultValue": "",
      "required": true
    },
    {
      "type": "Stash File",
      "name": "segmentation",
      "label": "Segmentation",
      "description": "Path to the segmentation mask file in NIfTI format",
      "defaultValue": "",
      "required": true
    },
    {
      "type": "Stash File",
      "name": "output_dir",
      "label": "Output Directory",
      "description": "Directory where visualization images will be saved",
      "defaultValue": "./visualization_output",
      "required": false
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}