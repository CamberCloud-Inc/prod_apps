{
  "name": "biomni-prepare-input-for-nnunet",
  "title": "Biomni: Prepare Input For Nnunet",
  "description": "Prepare input data for nnUNet by handling both 4D and pre-split modality files",
  "content": "<h3>Overview</h3><p>nnUNet requires input data in a specific naming convention and directory structure for automated segmentation. This tool prepares medical imaging data by converting files to nnUNet's expected format, handling both 4D multi-modal NIfTI files and pre-split individual modality files. It automatically renames files according to nnUNet conventions (CaseName_XXXX.nii.gz format with modality suffixes), organizes them into the correct directory structure, and validates that all required modalities are present for successful processing.</p><h3>Input Parameters</h3><ul><li><strong>input_path</strong> (string, required): Path to the input image file (4D NIfTI) or directory containing pre-split modality files</li><li><strong>output_dir</strong> (string, required): Directory where nnUNet-formatted files will be created with proper naming and structure</li><li><strong>case_name</strong> (string, optional): Identifier prefix for the case (e.g., 'BRAT' for BraTS dataset). Default: 'BRAT'</li></ul><h3>Biological Use Case</h3><p>This tool is essential for preparing multi-modal MRI data for brain tumor segmentation using nnUNet, particularly for BraTS (Brain Tumor Segmentation) datasets containing T1, T1-contrast enhanced, T2, and FLAIR sequences. It streamlines the preprocessing workflow for large-scale studies requiring automated segmentation of multiple cases. In clinical research, it enables batch processing of patient scans for consistent segmentation across cohorts. The tool handles the complexity of nnUNet's input requirements, allowing researchers to focus on analysis rather than data formatting, and ensures reproducibility across different computing environments.</p><h3>Output</h3><p>Returns a parameters (nnunet_preparation_results.json) containing the path to the prepared directory. The output directory contains properly named and organized NIfTI files following nnUNet conventions: CaseName_0000.nii.gz (modality 0), CaseName_0001.nii.gz (modality 1), etc. Files are validated for correct dimensions, orientation, and naming, ready for direct input to nnUNet inference or training pipelines.</p><h3>Category</h3><p>bioimaging</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/bioimaging/prepare_input_for_nnunet.py --input_path \"${input_path}\" --output_dir \"${output_dir}\" --case_name \"${case_name}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "input_path",
      "label": "Input Path",
      "description": "Path to the input image file (4D NIfTI) or directory",
      "defaultValue": "",
      "required": true
    },
    {
      "type": "Stash File",
      "name": "output_dir",
      "label": "Output Directory",
      "description": "Directory where nnUNet-formatted files will be created",
      "defaultValue": "",
      "required": true
    },
    {
      "type": "Input",
      "name": "case_name",
      "label": "Case Name",
      "description": "Identifier prefix for the case (e.g., 'BRAT' for BraTS dataset)",
      "defaultValue": "BRAT",
      "required": false
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}