{
  "name": "Segment with nnUNet",
  "description": "Segment medical images using nnUNet with automatic model downloading",
  "class": "bioimaging",
  "entrypoint": "segment_with_nn_unet.py",
  "parameters": {
    "image_path": {
      "type": "string",
      "description": "Path to input image file or directory",
      "required": true
    },
    "output_dir": {
      "type": "string",
      "description": "Directory to save segmentation results",
      "required": true
    },
    "task_id": {
      "type": "string",
      "description": "Task identifier (e.g., 'Task001_BrainTumour')",
      "required": true
    },
    "model_type": {
      "type": "string",
      "description": "Model type (default: '3d_fullres')",
      "required": false,
      "default": "3d_fullres"
    },
    "folds": {
      "type": "array",
      "description": "Model folds to use (default: [0, 1, 2, 3, 4])",
      "required": false,
      "default": [0, 1, 2, 3, 4]
    },
    "use_tta": {
      "type": "boolean",
      "description": "Use test time augmentation (default: false)",
      "required": false,
      "default": false
    },
    "num_threads": {
      "type": "integer",
      "description": "Number of threads for preprocessing (default: 1)",
      "required": false,
      "default": 1
    },
    "mixed_precision": {
      "type": "boolean",
      "description": "Use mixed precision (default: true)",
      "required": false,
      "default": true
    },
    "verbose": {
      "type": "boolean",
      "description": "Verbose logging (default: true)",
      "required": false,
      "default": true
    },
    "auto_prepare_input": {
      "type": "boolean",
      "description": "Automatically prepare input for nnUNet (default: true)",
      "required": false,
      "default": true
    },
    "results_folder": {
      "type": "string",
      "description": "Path to nnUNet results folder (optional)",
      "required": false
    }
  },
  "returns": {
    "output_dir": {
      "type": "string",
      "description": "Directory containing segmentation results"
    }
  },
  "setup_commands": [
    "git clone --depth 1 https://github.com/snap-stanford/Biomni.git /tmp/biomni 2>/dev/null || (cd /tmp/biomni && git pull)",
    "pip install -e /tmp/biomni",
    "pip install nibabel numpy SimpleITK torch matplotlib requests nnunet"
  ]
}
