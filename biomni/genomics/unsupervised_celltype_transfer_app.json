{
  "name": "biomni-unsupervised-celltype-transfer",
  "title": "Biomni: Unsupervised Celltype Transfer",
  "description": "Transfer cell type annotations between single-cell RNA-seq datasets using various methods via popV framework",
  "content": "<h3>Overview</h3><p>Transfers cell type annotations from a reference single-cell RNA-seq dataset to a query dataset using the popV (population-level Variation) framework with multiple computational methods. This tool enables automated cell type annotation by leveraging existing annotated atlases, supporting various algorithms including CELLTYPIST, KNN with different integration methods (BBKNN, Harmony, Scanorama, scVI), ONCLASS, Random Forest, scANVI, Support Vector Machines, and XGBoost.</p><h3>Input Parameters</h3><ul><li><strong>annotated_h5ad</strong> (string): Path to reference annotated H5AD file with cell type labels from stash</li><li><strong>query_h5ad</strong> (string): Path to query H5AD file to annotate from stash</li><li><strong>ref_labels_key</strong> (string, required): Column name in ref_adata.obs containing cell type annotations</li><li><strong>query_batch_key</strong> (string, optional): Column name in query_adata.obs for batch information</li><li><strong>ref_batch_key</strong> (string, optional): Column name in ref_adata.obs for batch information</li><li><strong>celltypist</strong> (boolean, optional): Use CELLTYPIST method (default: false)</li><li><strong>knn_bbknn</strong> (boolean, optional): Use KNN with BBKNN integration (default: false)</li><li><strong>knn_harmony</strong> (boolean, optional): Use KNN with Harmony integration (default: false)</li><li><strong>knn_scanorama</strong> (boolean, optional): Use KNN with Scanorama integration (default: false)</li><li><strong>knn_scvi</strong> (boolean, optional): Use KNN with scVI integration (default: false)</li><li><strong>onclass</strong> (boolean, optional): Use ONCLASS method (default: false)</li><li><strong>random_forest</strong> (boolean, optional): Use Random Forest classifier (default: false)</li><li><strong>scanvi_popv</strong> (boolean, optional): Use scANVI with popV (default: true)</li><li><strong>support_vector</strong> (boolean, optional): Use Support Vector Machine (default: false)</li><li><strong>xgboost</strong> (boolean, optional): Use XGBoost classifier (default: false)</li><li><strong>n_jobs</strong> (integer, optional): Number of parallel jobs (default: 1)</li><li><strong>n_samples_per_label</strong> (integer, optional): Training samples per cell type label (default: 10)</li><li><strong>output</strong> (string): Output directory path</li></ul><h3>Input Format</h3><p>Provide a JSON file with the following structure:</p><pre>{\n  \"annotated_h5ad\": \"/path/to/reference_annotated.h5ad\",\n  \"query_h5ad\": \"/path/to/query_data.h5ad\",\n  \"ref_labels_key\": \"cell_type\",\n  \"query_batch_key\": \"batch\",\n  \"ref_batch_key\": \"batch\",\n  \"scanvi_popv\": true,\n  \"knn_harmony\": true,\n  \"n_jobs\": 4,\n  \"n_samples_per_label\": 20,\n  \"output\": \"/output/directory\"\n}</pre><h3>Biological Use Case</h3><p>Critical for rapid cell type annotation of new single-cell datasets. Used to annotate query datasets without manual curation, leverage high-quality reference atlases, compare multiple annotation methods, validate cell type assignments with consensus predictions, and accelerate single-cell analysis pipelines in large-scale studies.</p><h3>Output</h3><p>Generates transfer_log.txt with method performance metrics, prediction confidence scores, and an annotated H5AD file with transferred cell type labels added to the query dataset's adata.obs.</p><h3>Category</h3><p>genomics</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/genomics/unsupervised_celltype_transfer.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}