{
  "name": "biomni-find-sequence-mutations",
  "title": "Biomni: Find Sequence Mutations",
  "description": "Identify mutations by comparing query and reference sequences",
  "content": "<h3>Overview</h3><p>This tool identifies mutations by performing pairwise sequence alignment between a query sequence and a reference sequence. It detects substitutions, insertions, and deletions (indels), reporting the exact positions and types of all mutations found. The tool is essential for validating cloning products, analyzing sequencing results, and identifying unexpected changes in DNA constructs.</p><h3>Input Parameters</h3><ul><li><strong>query_sequence</strong>: Query DNA sequence to analyze (string)</li><li><strong>reference_sequence</strong>: Reference DNA sequence to compare against (string)</li><li><strong>--query-start</strong>: Start position of query sequence for alignment (default: 1)</li></ul><h3>Input Format</h3><p>Command-line arguments format:</p><pre>python find_sequence_mutations.py \"ATGCGATCGA...\" \"ATGCGATCGA...\" --query-start 1 -o output/</pre><p>Provide query sequence and reference sequence as positional arguments.</p><h3>Biological Use Case</h3><p>Critical for sequence validation and mutation analysis:</p><ul><li>Verify Sanger sequencing results against expected sequences</li><li>Identify PCR-induced mutations after amplification</li><li>Validate site-directed mutagenesis success</li><li>Detect unwanted mutations in cloned constructs</li><li>Compare patient samples against wild-type sequences</li><li>Quality control for synthetic DNA gene synthesis</li></ul><h3>Output</h3><p>Returns a JSON file (mutations.json) containing detailed mutation information including positions, types (substitution/insertion/deletion), original and mutated bases.</p><h3>Category</h3><p>molecular_biology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/molecular_biology/find_sequence_mutations.py \"${query_sequence}\" \"${reference_sequence}\" --query-start ${query_start} -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Input",
      "name": "query_sequence",
      "label": "Query Sequence",
      "description": "Query DNA sequence to analyze",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "reference_sequence",
      "label": "Reference Sequence",
      "description": "Reference DNA sequence to compare against",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "query_start",
      "label": "Query Start Position",
      "description": "Start position of query sequence (default: 1)",
      "defaultValue": "1"
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}