{
  "name": "biomni-annotate-open-reading-frames",
  "title": "Biomni: Annotate Open Reading Frames",
  "description": "Find all Open Reading Frames (ORFs) in a DNA sequence using Biopython",
  "content": "<h3>Overview</h3><p>This tool identifies all Open Reading Frames (ORFs) in a DNA sequence using Biopython. ORFs are continuous stretches of codons starting with a start codon (ATG) and ending with a stop codon (TAA, TAG, or TGA), representing potential protein-coding regions. The tool can search both forward and reverse complement strands and filter nested ORFs.</p><h3>Input Parameters</h3><ul><li><strong>sequence</strong>: DNA sequence to analyze for ORFs</li><li><strong>min_length</strong>: Minimum length of ORF in nucleotides (integer)</li><li><strong>--search-reverse</strong>: Optional flag to search the reverse complement strand</li><li><strong>--filter-subsets</strong>: Optional flag to filter out nested ORFs contained within larger ORFs</li></ul><h3>Input Format</h3><p>Command-line arguments format:</p><pre>python annotate_open_reading_frames.py \"ATGTACGAT...\" 100 --search-reverse --filter-subsets -o output/</pre><p>The sequence is provided as the first argument, followed by the minimum ORF length, and optional flags.</p><h3>Biological Use Case</h3><p>Essential for gene prediction and annotation in molecular biology:</p><ul><li>Identify potential protein-coding genes in newly sequenced DNA</li><li>Analyze plasmid constructs for unintended ORFs that may affect expression</li><li>Discover small ORFs (smORFs) in intergenic regions</li><li>Validate synthetic gene designs for absence of cryptic start codons</li><li>Screen expression vectors for frame-shifted or truncated ORFs</li></ul><h3>Output</h3><p>Returns a JSON file (orf_results.json) containing all identified ORFs with their start positions, end positions, reading frames, lengths, and sequences.</p><h3>Category</h3><p>molecular_biology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/molecular_biology/annotate_open_reading_frames.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}