{
  "name": "biomni-design-golden-gate-oligos",
  "title": "Biomni: Design Golden Gate Oligos",
  "description": "Design oligonucleotides for Golden Gate assembly with matching overhangs",
  "content": "<h3>Overview</h3><p>This tool designs oligonucleotides (oligos) for Golden Gate assembly with properly matching overhangs. Golden Gate assembly uses Type IIS restriction enzymes that cut outside their recognition sequences, creating custom overhangs. The tool automatically generates forward and reverse oligos with the correct overhangs for seamless, directional cloning of inserts into vectors.</p><h3>Input Parameters</h3><ul><li><strong>backbone_sequence</strong>: Plasmid/backbone DNA sequence (string)</li><li><strong>insert_sequence</strong>: DNA sequence to be inserted (string)</li><li><strong>enzyme</strong>: Type IIS restriction enzyme name (BsaI, BsmBI, BbsI, Esp3I, BtgZI, or SapI)</li><li><strong>--linear</strong>: Optional flag indicating backbone is linear (default: circular)</li></ul><h3>Biological Use Case</h3><p>Essential for Golden Gate cloning workflows in synthetic biology:</p><ul><li>Design oligos for inserting gene fragments into expression vectors</li><li>Create seamless assemblies without scar sequences</li><li>Generate compatible overhangs for multi-fragment assemblies</li><li>Design oligos for site-directed mutagenesis using Golden Gate</li><li>Prepare inserts for modular cloning systems (MoClo, GoldenBraid)</li><li>Clone PCR products with optimized overhangs for high efficiency</li></ul><h3>Output</h3><p>Returns a parameters (golden_gate_oligos.json) containing designed forward and reverse oligonucleotide sequences with appropriate overhangs for the specified enzyme.</p><h3>Category</h3><p>molecular_biology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/molecular_biology/design_golden_gate_oligos.py \"${backbone_sequence}\" \"${insert_sequence}\" \"${enzyme}\" ${linear} -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Input",
      "name": "backbone_sequence",
      "label": "Backbone Sequence",
      "description": "Plasmid/backbone DNA sequence",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "insert_sequence",
      "label": "Insert Sequence",
      "description": "DNA sequence to be inserted",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "enzyme",
      "label": "Enzyme",
      "description": "Type IIS enzyme (BsaI, BsmBI, BbsI, Esp3I, BtgZI, SapI)",
      "defaultValue": "BsaI"
    },
    {
      "type": "Input",
      "name": "linear",
      "label": "Linear Backbone",
      "description": "Backbone is linear (leave empty for circular, add --linear for linear)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}