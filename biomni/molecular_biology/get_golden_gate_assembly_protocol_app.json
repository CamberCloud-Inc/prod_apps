{
  "name": "get-golden-gate-assembly-protocol",
  "title": "Golden Gate Assembly Protocol",
  "description": "Get customized Golden Gate assembly protocol based on your requirements",
  "content": "<h3 class=\"heading-node\">Overview</h3><p class=\"text-node\">This application generates a customized Golden Gate assembly protocol based on the number of inserts and specific parameters.</p><h3 class=\"heading-node\">Features</h3><ul class=\"list-node\"><li class=\"list-item-node\">Supports all Type IIS enzymes</li><li class=\"list-item-node\">Calculates molar ratios</li><li class=\"list-item-node\">Customized thermal cycling</li><li class=\"list-item-node\">Library prep optimization</li></ul><h3 class=\"heading-node\">Parameters</h3><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Enzyme</strong>: Type IIS enzyme to use</li><li class=\"list-item-node\"><strong>Number of Inserts</strong>: How many fragments to assemble</li><li class=\"list-item-node\"><strong>Vector Details</strong>: Length and amount (optional)</li><li class=\"list-item-node\"><strong>Insert Lengths</strong>: Lengths in bp (optional)</li></ul><h3 class=\"heading-node\">Output</h3><p class=\"text-node\">Returns detailed protocol with reaction setup, thermal cycling program, and notes.</p>",
  "command": "git clone https://github.com/CamberCloud-Inc/prod_apps.git prod_apps_clone 2>/dev/null || (cd prod_apps_clone && git pull) && pip install -q biopython biomni && python prod_apps_clone/biomni/molecular_biology/get_golden_gate_assembly_protocol.py --num-inserts ${numInserts} --enzyme \"${enzyme}\" ${vectorLength} ${vectorAmount} ${insertLengths} ${libraryPrep} -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "String",
      "name": "enzyme",
      "label": "Type IIS Enzyme",
      "description": "Enzyme to use (BsaI, BsmBI, BbsI, Esp3I, BtgZI, or SapI)",
      "defaultValue": "BsaI"
    },
    {
      "type": "Number",
      "name": "numInserts",
      "label": "Number of Inserts",
      "description": "How many DNA fragments to assemble",
      "defaultValue": 1
    },
    {
      "type": "String",
      "name": "vectorLength",
      "label": "Vector Length (Optional)",
      "description": "Enter '--vector-length 5000' for 5kb vector (leave empty to skip)",
      "defaultValue": ""
    },
    {
      "type": "String",
      "name": "vectorAmount",
      "label": "Vector Amount (Optional)",
      "description": "Enter '--vector-amount 75' for 75ng (leave empty for default)",
      "defaultValue": ""
    },
    {
      "type": "String",
      "name": "insertLengths",
      "label": "Insert Lengths (Optional)",
      "description": "Enter '--insert-lengths 500 1000 1500' for multiple inserts",
      "defaultValue": ""
    },
    {
      "type": "String",
      "name": "libraryPrep",
      "label": "Library Preparation",
      "description": "Enter '--library-prep' if this is for library prep (leave empty otherwise)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Select or create a stash folder where protocol will be saved",
      "defaultValue": "./"
    }
  ]
}
