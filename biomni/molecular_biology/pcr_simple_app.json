{
  "name": "biomni-pcr-simple",
  "title": "Biomni: Pcr Simple",
  "description": "Simulate PCR amplification with given primers on a DNA template",
  "content": "<h3>Overview</h3><p>This tool simulates PCR (Polymerase Chain Reaction) amplification in silico using specified forward and reverse primers on a DNA template. It identifies primer binding sites, validates primer orientation, calculates the amplicon size, and returns the predicted PCR product sequence. The tool works with both linear and circular templates (plasmids) and accounts for primer directionality.</p><h3>Input Parameters</h3><ul><li><strong>sequence</strong>: DNA template sequence (plasmid or linear DNA) (string)</li><li><strong>forward_primer</strong>: Forward primer sequence in 5' to 3' orientation (string)</li><li><strong>reverse_primer</strong>: Reverse primer sequence in 5' to 3' orientation (string)</li><li><strong>--circular</strong>: Optional flag indicating template is circular (default: linear)</li></ul><h3>Input Format</h3><p>Command-line arguments format:</p><pre>python pcr_simple.py \"ATGCGATCGA...\" \"ATGCGAT\" \"TACGCTA\" --circular -o output/</pre><p>Provide template sequence, forward primer, and reverse primer as positional arguments.</p><h3>Biological Use Case</h3><p>Essential for PCR planning and validation in molecular cloning:</p><ul><li>Predict PCR product sizes before running experiments</li><li>Verify primer binding sites on plasmid templates</li><li>Validate primer design for gene amplification</li><li>Plan colony PCR screening strategies</li><li>Troubleshoot failed PCR reactions by checking primer binding</li><li>Design PCR strategies for subcloning and mutagenesis</li></ul><h3>Output</h3><p>Returns a JSON file (pcr_results.json) containing the predicted PCR product sequence, amplicon size, primer binding positions, and amplification success status.</p><h3>Category</h3><p>molecular_biology</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/molecular_biology/pcr_simple.py \"${sequence}\" \"${forward_primer}\" \"${reverse_primer}\" ${circular} -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Input",
      "name": "sequence",
      "label": "Template Sequence",
      "description": "DNA sequence or plasmid",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "forward_primer",
      "label": "Forward Primer",
      "description": "Forward primer sequence (5' to 3')",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "reverse_primer",
      "label": "Reverse Primer",
      "description": "Reverse primer sequence (5' to 3')",
      "defaultValue": ""
    },
    {
      "type": "Input",
      "name": "circular",
      "label": "Circular Template",
      "description": "Sequence is circular (leave empty for linear, add --circular for circular)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}