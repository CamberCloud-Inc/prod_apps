{
  "name": "biomni-simulate-whole-cell-ode-model",
  "title": "Biomni: Simulate Whole Cell ODE Model",
  "description": "Simulate a whole-cell model using ordinary differential equations (ODEs)",
  "content": "<h3>Overview</h3><p>This tool simulates whole-cell biochemical network dynamics using systems of ordinary differential equations (ODEs). Whole-cell models integrate multiple cellular processes including metabolism, gene expression, signal transduction, and cell cycle regulation to predict cellular behavior under different conditions. The simulation uses advanced ODE solvers to compute time-course trajectories of molecular species concentrations, enzyme activities, and cellular states. This mechanistic modeling approach enables hypothesis testing, parameter sensitivity analysis, and prediction of cellular responses to perturbations such as drug treatments, genetic modifications, or environmental changes.</p><h3>Input Parameters</h3><ul><li><strong>initial_conditions</strong> (object/dictionary, required): Initial concentrations or states of all model variables at time zero. Keys are variable names (e.g., \"glucose\", \"ATP\", \"protein_X\"), values are numerical initial concentrations or activity levels. Units depend on the specific model but typically include mM (millimolar), molecules/cell, or arbitrary units.</li><li><strong>parameters</strong> (object/dictionary, required): Model parameters including rate constants, enzyme kinetic parameters (Km, Vmax), binding affinities, synthesis/degradation rates, etc. Keys are parameter names, values are numerical values with appropriate units (e.g., /s for rate constants, mM for Michaelis constants).</li><li><strong>time_start</strong> (float, optional): Simulation start time. Default: 0.</li><li><strong>time_end</strong> (float, optional): Simulation end time in the same units as rate constants (typically seconds, minutes, or hours). Default: 100.</li><li><strong>time_points</strong> (integer, optional): Number of time points to evaluate for output resolution. Higher values give smoother trajectories but increase computation time. Default: 1000.</li><li><strong>method</strong> (string, optional): ODE solver method. Options include \"LSODA\" (automatic stiff/non-stiff detection), \"BDF\" (backward differentiation for stiff systems), \"Radau\" (implicit Runge-Kutta for stiff ODEs), \"RK45\" (explicit Runge-Kutta for non-stiff). Default: \"LSODA\".</li></ul><h3>Biological Use Case</h3><p>Whole-cell ODE modeling is essential for systems biology research aimed at understanding emergent cellular behaviors from molecular interactions. Applications include: (1) Metabolic engineering - optimizing microbial strains for biofuel or pharmaceutical production by predicting flux distributions and identifying bottleneck enzymes, (2) Drug target identification - simulating disease-associated signaling pathways to identify intervention points and predict drug effects, (3) Synthetic biology - designing genetic circuits with desired dynamic behaviors (oscillators, switches, logic gates) before laboratory implementation, (4) Cell cycle modeling - understanding checkpoint controls and predicting effects of cell cycle inhibitors in cancer therapy, (5) Circadian rhythm studies - modeling transcriptional-translational feedback loops that generate 24-hour oscillations, and (6) Pharmacokinetic-pharmacodynamic (PK-PD) modeling - linking drug concentration dynamics to cellular responses. These simulations reduce experimental costs, guide experimental design, and provide mechanistic insights that purely data-driven approaches cannot achieve.</p><h3>Output</h3><p>The simulation generates whole_cell_ode_simulation_results.txt containing: (1) complete time-course trajectories for all model variables showing temporal dynamics, (2) steady-state values and time to reach steady state if applicable, (3) peak concentrations, oscillation periods, and amplitudes for dynamic variables, (4) phase portraits showing relationships between key variables, (5) solver performance metrics including computation time and number of function evaluations, (6) warnings about stiffness issues or integration difficulties that might affect result reliability, and (7) comprehensive visualization plots showing time courses, phase space trajectories, and sensitivity to initial conditions saved as PNG files suitable for publication.</p><h3>Category</h3><p>bioengineering</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/bioengineering/simulate_whole_cell_ode_model.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}