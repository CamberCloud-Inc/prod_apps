{
  "name": "biomni-analyze-circular-dichroism-spectra",
  "title": "Biomni: Analyze Circular Dichroism Spectra",
  "description": "Analyzes circular dichroism (CD) spectroscopy data to determine secondary structure and thermal stability.",
  "content": "<h3>Overview</h3><p>Circular dichroism (CD) spectroscopy is a powerful technique for analyzing protein secondary structure content and thermal stability. This tool processes CD spectroscopy data across wavelength ranges (typically 190-260 nm for far-UV CD) to quantify alpha-helix, beta-sheet, and random coil content. It can also analyze thermal denaturation curves by monitoring CD signal changes across temperature ranges, providing insights into protein folding stability and cooperative unfolding transitions.</p><h3>Input Parameters</h3><ul><li><strong>sample_name</strong> (string, required): Identifier for the protein or sample being analyzed</li><li><strong>sample_type</strong> (string, required): Type of sample (e.g., \"protein\", \"peptide\", \"DNA\", \"RNA\")</li><li><strong>wavelength_data</strong> (array of numbers, required): Wavelength values in nanometers for CD measurements</li><li><strong>cd_signal_data</strong> (array of numbers, required): CD signal values corresponding to each wavelength (in mdeg or molar ellipticity)</li><li><strong>temperature_data</strong> (array of numbers, optional): Temperature values in Kelvin for thermal denaturation experiments</li><li><strong>thermal_cd_data</strong> (array of numbers, optional): CD signal values at a specific wavelength across different temperatures</li><li><strong>output_dir</strong> (string, optional): Directory path for output files (default: \"./\")</li></ul><h3>Input Format</h3><pre>{\n  \"sample_name\": \"MyProtein_WT\",\n  \"sample_type\": \"protein\",\n  \"wavelength_data\": [190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260],\n  \"cd_signal_data\": [-15000, -18000, -20000, -22000, -21000, -18000, -14000, -10000, -7000, -5000, -3000, -2000, -1000, -500, 0],\n  \"temperature_data\": [293.15, 298.15, 303.15, 308.15, 313.15, 318.15, 323.15, 328.15, 333.15],\n  \"thermal_cd_data\": [-22000, -21800, -21000, -19000, -15000, -10000, -6000, -3000, -1000],\n  \"output_dir\": \"./cd_analysis_output/\"\n}</pre><h3>Biological Use Case</h3><p>Researchers use CD spectroscopy to characterize protein structure and stability in drug discovery, protein engineering, and biophysics studies. This tool enables quantitative analysis of secondary structure composition, allowing scientists to verify proper protein folding after expression and purification, assess the impact of mutations on protein structure, evaluate buffer conditions for protein stability, measure binding-induced conformational changes, and determine thermal melting temperatures (Tm) to assess protein thermostability. CD spectroscopy is particularly valuable for quality control in biotherapeutic development and for understanding structure-function relationships in proteins.</p><h3>Output</h3><p>The analysis produces JSON output containing secondary structure percentages (alpha-helix, beta-sheet, random coil), structural classification, thermal stability parameters including melting temperature (Tm) if temperature data is provided, and statistical quality metrics. Visualization plots may include CD spectrum curves and thermal denaturation curves showing unfolding transitions.</p><h3>Category</h3><p>biochemistry</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/biochemistry/analyze_circular_dichroism_spectra.py \"${inputFile}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "inputFile",
      "label": "Input File",
      "description": "Input file from stash (JSON format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}