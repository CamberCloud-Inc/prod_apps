{
  "name": "biomni-fit-genomic-prediction-model",
  "title": "Biomni: Fit Genomic Prediction Model",
  "description": "Fit linear mixed model for genomic prediction using genotype and phenotype data",
  "content": "<h3>Overview</h3><p>This tool fits linear mixed models for genomic prediction, enabling prediction of phenotypic traits from genotype data. It implements genomic best linear unbiased prediction (GBLUP) methodology, accounts for population structure and relatedness through genomic relationship matrices, and supports additive and additive-dominance genetic models. The tool is essential for breeding programs and personalized medicine applications requiring phenotype prediction from genetic markers.</p><h3>Input Parameters</h3><ul><li><strong>genotypes</strong> (string): Path to genotype data file in NumPy .npy format (matrix: individuals x markers)</li><li><strong>phenotypes</strong> (string): Path to phenotype data file in NumPy .npy format (vector: individuals x traits)</li><li><strong>fixed_effects</strong> (string, optional): Path to fixed effects covariates file in NumPy .npy format (matrix: individuals x covariates)</li><li><strong>model_type</strong> (string, optional): Genetic model type - 'additive' or 'additive_dominance' (default: 'additive')</li><li><strong>output_file</strong> (string, optional): Filename for results CSV (default: 'genomic_prediction_results.csv')</li></ul><h3>Input Format</h3><pre>Genotypes file (.npy):\n# NumPy array shape: (n_individuals, n_markers)\n# Encoded as 0, 1, 2 for SNP genotypes (AA, AB, BB)\ngenotypes = np.array([[0, 1, 2], [1, 1, 1], [2, 0, 1]])\n\nPhenotypes file (.npy):\n# NumPy array shape: (n_individuals,) or (n_individuals, n_traits)\nphenotypes = np.array([25.3, 30.1, 28.7])\n\nFixed effects file (.npy, optional):\n# NumPy array shape: (n_individuals, n_covariates)\nfixed_effects = np.array([[1, 5.2], [1, 4.8], [1, 5.5]])</pre><h3>Biological Use Case</h3><p>Critical for plant and animal breeding programs: predicting breeding values for selection, estimating genomic heritability, optimizing mate selection strategies, accelerating genetic gain through genomic selection, and reducing generation intervals. Also applicable in human genetics for disease risk prediction, pharmacogenomics, and precision medicine where genetic profiles inform phenotype predictions.</p><h3>Output</h3><p>Generates genomic prediction model results including: estimated breeding values or predicted phenotypes for all individuals, variance component estimates (genetic and residual), heritability estimates, model fit statistics (R-squared, prediction accuracy), marker effect estimates, and comprehensive log file (genomic_prediction_log.txt) with model diagnostics and prediction performance metrics. Results CSV contains individual-level predictions.</p><h3>Category</h3><p>genetics</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/genetics/fit_genomic_prediction_model.py \"${genotypes}\" \"${phenotypes}\" ${fixed_effects:+-f \"${fixed_effects}\"} ${model_type:+-m \"${model_type}\"} ${output_file:+-p \"${output_file}\"} -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "name": "genotypes",
      "label": "Genotypes",
      "description": "Path to genotype data file (numpy .npy format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "phenotypes",
      "label": "Phenotypes",
      "description": "Path to phenotype data file (numpy .npy format)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "fixed_effects",
      "label": "Fixed Effects (Optional)",
      "description": "Path to fixed effects file (numpy .npy format, optional)",
      "defaultValue": ""
    },
    {
      "type": "String",
      "name": "model_type",
      "label": "Model Type (Optional)",
      "description": "Type of genetic model: 'additive' or 'additive_dominance' (default: additive)",
      "defaultValue": ""
    },
    {
      "type": "String",
      "name": "output_file",
      "label": "Output File (Optional)",
      "description": "Output filename for results (default: genomic_prediction_results.csv)",
      "defaultValue": ""
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}