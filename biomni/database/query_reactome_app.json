{
  "name": "biomni-query-reactome",
  "title": "Biomni: Query Reactome",
  "description": "Query Reactome for curated biological pathways and molecular reaction networks in human and model organisms.",
  "content": "<h3>Overview</h3><p>Searches Reactome, an expert-curated knowledgebase of biological pathways and processes. Provides detailed molecular-level descriptions of metabolic pathways, signal transduction, DNA replication, immune responses, and disease mechanisms with extensive cross-referencing to external databases.</p><h3>Input Parameters</h3><ul><li><strong>prompt</strong> (string, optional): Natural language query about pathways or biological processes</li><li><strong>endpoint</strong> (string, optional): Specific Reactome API endpoint</li><li><strong>download</strong> (boolean, optional): Whether to download pathway diagrams or data files</li><li><strong>output_dir</strong> (string, optional): Directory path for downloaded files</li><li><strong>verbose</strong> (boolean, optional): Enable detailed logging output</li></ul><h3>Biological Use Case</h3><p>Critical for systems biology, pathway enrichment analysis, and understanding disease mechanisms. Researchers use Reactome to interpret omics data, identify enriched biological processes, visualize molecular interactions, understand drug mechanisms, map disease pathways, and generate hypotheses about gene function and regulation.</p><h3>Output</h3><p>Returns a parameters (reactome_results.json) containing pathway information including Reactome IDs, pathway names and hierarchies, participating molecules, reactions and interactions, disease associations, cross-references, and optionally downloaded pathway diagrams or SBML/BioPAX format files.</p><h3>Category</h3><p>database</p>",
  "command": "rm -rf prod_apps 2>/dev/null || true && git clone --depth 1 https://github.com/CamberCloud-Inc/prod_apps.git prod_apps && python3 prod_apps/biomni/database/query_reactome.py --prompt \"${prompt}\" --endpoint \"${endpoint}\" --download \"${download}\" --output_dir \"${output_dir}\" --verbose \"${verbose}\" -o \"${outputDir}\"",
  "engineType": "MPI",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select the configuration for the job",
      "options": [
        {
          "label": "Extra Extra Small CPU",
          "value": "xxsmall_cpu",
          "mapValue": {
            "nodeSize": "XXSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xxsmall_cpu"
    }
  ],
  "spec": [
    {
      "type": "Input",
      "name": "prompt",
      "label": "Prompt",
      "description": "Query prompt/description",
      "defaultValue": "",
      "required": false
    },
    {
      "type": "Input",
      "name": "endpoint",
      "label": "Endpoint",
      "description": "API endpoint path",
      "defaultValue": "",
      "required": false
    },
    {
      "type": "Input",
      "name": "download",
      "label": "Download",
      "description": "Download files (true/false)",
      "defaultValue": "",
      "required": false
    },
    {
      "type": "Input",
      "name": "output_dir",
      "label": "Output Directory",
      "description": "Output directory for downloads",
      "defaultValue": "",
      "required": false
    },
    {
      "type": "Input",
      "name": "verbose",
      "label": "Verbose",
      "description": "Enable verbose output (true/false)",
      "defaultValue": "",
      "required": false
    },
    {
      "type": "Stash File",
      "name": "outputDir",
      "label": "Output Directory",
      "description": "Output directory in stash",
      "defaultValue": "./"
    }
  ]
}