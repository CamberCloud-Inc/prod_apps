{
  "name": "neutronstar-10x-assembly",
  "title": "10x Genomics De Novo Assembly",
  "description": "De novo genome assembly pipeline for 10x Genomics Chromium linked-read technology using Supernova assembler. Produces high-quality phased genome assemblies from linked-read sequencing data with scaffold N50 values exceeding traditional short-read methods. Samplesheet format: `genomesize: 1000000\nsamples:\n  - id: assembly_01\n    fastqs: /path/to/sample1/fastqs/\n  - id: assembly_02\n    fastqs: /path/to/sample2/fastqs/\n    maxreads: 500000000\n    bcfrac: 0.5\n  - id: assembly_03\n    fastqs: /path/to/sample3/fastqs/\n    lanes: 1,2,3\n    indices: SI-GA-A1`",
  "version": "1.0.0",
  "engineType": "NEXTFLOW",
  "command": "nextflow run nf-core/neutronstar --input ${input} --outdir ${outdir} --max_cpus ${max_cpus} --max_memory ${max_memory} -r 1.0.0 -profile k8s -c /etc/mpi/nextflow.camber.config",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/neutronstar/master/docs/images/nf-core-neutronstar_logo_light.png",
  "content": "<h1 class=\"heading-node\">🧬 Neutronstar: 10x Genomics De Novo Assembly</h1><p class=\"text-node\"><strong>High-Quality Genome Assembly from Linked-Read Technology</strong></p><p class=\"text-node\">nf-core/neutronstar is a bioinformatics best-practice pipeline for de novo genome assembly of 10x Genomics Chromium linked-read sequencing data using the Supernova assembler. This technology enables phased genome assembly with superior contiguity compared to traditional short-read methods.</p><img src=\"https://raw.githubusercontent.com/nf-core/neutronstar/master/docs/images/nf-core-neutronstar_logo_light.png\" alt=\"nf-core/neutronstar workflow\" width=\"400\" height=\"200\"><h2 class=\"heading-node\">🎯 What is 10x Genomics Linked-Read Technology?</h2><p class=\"text-node\">10x Genomics Chromium linked-read sequencing partitions long DNA molecules into microscopic droplets, where short-read sequencing is performed. Each partition receives a unique barcode, allowing computational reconstruction of long-range genomic information from short reads.</p><h3 class=\"heading-node\">Key Advantages</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🔗 Long-range Information:</strong> Reconstruct scaffolds spanning megabases using barcode linkage</p></li><li><p class=\"text-node\"><strong>🧬 Phased Assembly:</strong> Separate maternal and paternal haplotypes in diploid genomes</p></li><li><p class=\"text-node\"><strong>📊 Superior N50:</strong> Achieve scaffold N50 values 10-100x higher than standard short-read assemblies</p></li><li><p class=\"text-node\"><strong>🎯 Structural Variant Detection:</strong> Identify large insertions, deletions, and rearrangements</p></li></ul><h2 class=\"heading-node\">🔬 Supernova Assembler</h2><p class=\"text-node\">The pipeline uses 10x Genomics' Supernova assembler, specifically designed for linked-read data:</p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>Optimized for Diploid Genomes:</strong> Handles heterozygosity and produces phased assemblies</p></li><li><p class=\"text-node\"><strong>Quality-Aware:</strong> Leverages barcode information and molecule length distributions</p></li><li><p class=\"text-node\"><strong>Scalable:</strong> Efficiently processes large genomes (tested up to 3.5 Gb)</p></li><li><p class=\"text-node\"><strong>Multiple Output Formats:</strong> Pseudohaplotype, megabubbles, and raw assemblies</p></li></ul><h2 class=\"heading-node\">📋 Input Requirements</h2><h3 class=\"heading-node\">10x Genomics FASTQ Data</h3><p class=\"text-node\">The pipeline requires 10x Genomics Chromium linked-read FASTQ files in standard Illumina naming convention. You can specify inputs via command-line parameters or a YAML configuration file for multiple assemblies.</p><h3 class=\"heading-node\">Single Assembly - Command Line Parameters</h3><p class=\"text-node\">For a single genome assembly, provide:</p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>--id</strong> (Required): Unique assembly identifier (alphanumeric with underscores/hyphens allowed)</p></li><li><p class=\"text-node\"><strong>--fastqs</strong> (Required): Path to folder containing 10x Genomics FASTQ files</p></li><li><p class=\"text-node\"><strong>--genomesize</strong> (Required): Estimated genome size in base pairs (e.g., 1000000 for 1 Mb)</p></li><li><p class=\"text-node\"><strong>--sample</strong> (Optional): FASTQ filename prefix if non-standard naming</p></li><li><p class=\"text-node\"><strong>--lanes</strong> (Optional): Comma-separated lane numbers to process</p></li><li><p class=\"text-node\"><strong>--indices</strong> (Optional): Sample index sets or sequences</p></li><li><p class=\"text-node\"><strong>--bcfrac</strong> (Optional): Fraction of barcodes to use (0.0-1.0)</p></li><li><p class=\"text-node\"><strong>--maxreads</strong> (Optional): Maximum number of reads to use or 'all'</p></li></ul><h3 class=\"heading-node\">Example Command Line Usage</h3><pre class=\"block-node\"><code>nextflow run nf-core/neutronstar \\\n  -profile docker \\\n  --id my_assembly \\\n  --fastqs /data/10x_fastqs/ \\\n  --genomesize 3000000000 \\\n  --outdir ./results</code></pre><h3 class=\"heading-node\">Multiple Assemblies - YAML Configuration</h3><p class=\"text-node\">For processing multiple assemblies in one run, create a YAML configuration file:</p><pre class=\"block-node\"><code>genomesize: 1000000\nsamples:\n  - id: assembly_01\n    fastqs: /path/to/sample1/fastqs/\n  - id: assembly_02\n    fastqs: /path/to/sample2/fastqs/\n    maxreads: 500000000\n    bcfrac: 0.5\n  - id: assembly_03\n    fastqs: /path/to/sample3/fastqs/\n    lanes: 1,2,3\n    indices: SI-GA-A1</code></pre><p class=\"text-node\">Then run with: <code class=\"inline\" spellcheck=\"false\">--config_yaml samples.yaml</code></p><h3 class=\"heading-node\">10x Genomics FASTQ File Requirements</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>Naming Convention:</strong> Standard 10x Genomics format (e.g., <code class=\"inline\" spellcheck=\"false\">sample_S1_L001_R1_001.fastq.gz</code>)</p></li><li><p class=\"text-node\"><strong>File Structure:</strong> All FASTQ files for a sample in a single directory</p></li><li><p class=\"text-node\"><strong>Barcodes:</strong> Must contain 10x barcodes in read headers (automatically processed)</p></li><li><p class=\"text-node\"><strong>Read Format:</strong> Standard Illumina paired-end reads (typically 2x150bp)</p></li><li><p class=\"text-node\"><strong>Compression:</strong> Gzip compressed (.fastq.gz)</p></li></ul><h3 class=\"heading-node\">Data Quality Requirements</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>Coverage:</strong> 30-60x genome coverage recommended (56x optimal)</p></li><li><p class=\"text-node\"><strong>Molecule Length:</strong> Mean molecule length >50 kb (longer is better for scaffolding)</p></li><li><p class=\"text-node\"><strong>Genome Size:</strong> Optimized for genomes 100 Mb - 3.5 Gb</p></li><li><p class=\"text-node\"><strong>Library Quality:</strong> >1 billion valid read pairs recommended</p></li><li><p class=\"text-node\"><strong>N50 Weighted Molecule Length:</strong> >20 kb for optimal results</p></li></ul><h2 class=\"heading-node\">🔄 Pipeline Workflow</h2><h3 class=\"heading-node\">Processing Steps</h3><ol class=\"list-node\"><li><p class=\"text-node\"><strong>Input Validation:</strong> Verify FASTQ format and 10x barcode structure</p></li><li><p class=\"text-node\"><strong>Quality Control:</strong> FastQC analysis of raw reads</p></li><li><p class=\"text-node\"><strong>Barcode Processing:</strong> Extract and validate 10x barcodes from read headers</p></li><li><p class=\"text-node\"><strong>Supernova Assembly:</strong> De novo assembly leveraging linked-read information</p></li><li><p class=\"text-node\"><strong>Assembly QC:</strong> QUAST metrics, N50 statistics, and completeness assessment</p></li><li><p class=\"text-node\"><strong>Output Generation:</strong> Multiple assembly formats and comprehensive reports</p></li><li><p class=\"text-node\"><strong>MultiQC Report:</strong> Integrated quality control summary</p></li></ol><h2 class=\"heading-node\">📊 Comprehensive Results</h2><h3 class=\"heading-node\">Assembly Outputs</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>📁 Pseudohaplotype Assembly:</strong> Single haplotype representation (most contiguous)</p></li><li><p class=\"text-node\"><strong>🧬 Phased Assembly:</strong> Separated maternal and paternal scaffolds</p></li><li><p class=\"text-node\"><strong>💫 Megabubbles:</strong> Large heterozygous regions for variant analysis</p></li><li><p class=\"text-node\"><strong>🔧 Raw Assembly:</strong> Unprocessed assembly graph output</p></li></ul><h3 class=\"heading-node\">Quality Metrics</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>📈 Scaffold Statistics:</strong> N50, N90, L50 metrics for assembly contiguity</p></li><li><p class=\"text-node\"><strong>🔍 Phasing Quality:</strong> Phase block N50 and phasing accuracy</p></li><li><p class=\"text-node\"><strong>📊 Molecule Metrics:</strong> Effective coverage, molecule length distributions</p></li><li><p class=\"text-node\"><strong>✅ BUSCO Assessment:</strong> Genome completeness via conserved gene sets</p></li></ul><h3 class=\"heading-node\">Analysis Reports</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>📋 Supernova Summary:</strong> Detailed assembly statistics and warnings</p></li><li><p class=\"text-node\"><strong>🎨 MultiQC Report:</strong> Interactive visualization of all QC metrics</p></li><li><p class=\"text-node\"><strong>📊 QUAST Report:</strong> Comprehensive assembly evaluation</p></li></ul><h2 class=\"heading-node\">🎯 Ideal Use Cases</h2><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🧬 Novel Genome Assembly:</strong> First assembly of species without reference</p></li><li><p class=\"text-node\"><strong>🔬 Population Genomics:</strong> Haplotype-resolved assemblies for genetic studies</p></li><li><p class=\"text-node\"><strong>🧪 Structural Variation:</strong> Detect large-scale genomic rearrangements</p></li><li><p class=\"text-node\"><strong>🌱 Plant Genomics:</strong> Assemble complex polyploid genomes</p></li><li><p class=\"text-node\"><strong>🐾 Conservation Biology:</strong> Reference genomes for endangered species</p></li><li><p class=\"text-node\"><strong>🏥 Clinical Genomics:</strong> Phased assemblies for personalized medicine</p></li></ul><h2 class=\"heading-node\">⚙️ Resource Requirements</h2><p class=\"text-node\">Linked-read assembly is computationally intensive:</p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>Memory:</strong> 200+ GB RAM for mammalian-sized genomes</p></li><li><p class=\"text-node\"><strong>Storage:</strong> 1-2 TB for intermediate files (cleaned up after completion)</p></li><li><p class=\"text-node\"><strong>Runtime:</strong> 6-24 hours depending on genome size and coverage</p></li><li><p class=\"text-node\"><strong>Node Size:</strong> XLARGE recommended for optimal performance</p></li></ul><h2 class=\"heading-node\">🌟 Expected Assembly Quality</h2><p class=\"text-node\"><strong>Typical Results for High-Quality Data:</strong></p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>Scaffold N50:</strong> 10-50 Mb (mammalian genomes)</p></li><li><p class=\"text-node\"><strong>Phase Block N50:</strong> 1-10 Mb</p></li><li><p class=\"text-node\"><strong>Contig N50:</strong> 50-200 kb</p></li><li><p class=\"text-node\"><strong>BUSCO Completeness:</strong> >90% for well-sequenced samples</p></li></ul><blockquote class=\"block-node\"><p class=\"text-node\"><strong>Perfect for Research in:</strong> De novo genome assembly • Population genomics • Structural variation • Conservation genomics • Haplotype phasing • Complex genome assembly • Personalized genomics</p></blockquote><p class=\"text-node\">Built with <a class=\"link\" href=\"https://www.nextflow.io/\" target=\"_blank\">Nextflow</a> • Powered by <a class=\"link\" href=\"https://nf-co.re/neutronstar/1.0.0/\" target=\"_blank\">nf-core/neutronstar v1.0.0</a> • Containerized execution • Continuous integration tested</p>",
  "spec": [
    {
      "type": "Stash File",
      "label": "Sample Sheet",
      "name": "input",
      "description": "CSV samplesheet with columns: sample, fastq_1, fastq_2 (10x Genomics Chromium linked-read data)",
      "required": true,
      "hidden": false,
      "disabled": false,
      "restrictions": {
        "allow_files": true,
        "allow_folders": false,
        "allowed_file_types": [
          ".csv"
        ]
      }
    },
    {
      "type": "Stash File",
      "label": "Output Directory",
      "name": "outdir",
      "description": "Directory for assembly outputs, quality metrics, and reports",
      "defaultValue": "./neutronstar-results",
      "required": true,
      "hidden": false,
      "disabled": false,
      "restrictions": {
        "allow_files": false,
        "allow_folders": true
      }
    },
    {
      "type": "Input",
      "label": "Maximum CPUs",
      "name": "max_cpus",
      "description": "Maximum number of CPUs to use per process",
      "defaultValue": "32",
      "required": false,
      "hidden": false,
      "disabled": false
    },
    {
      "type": "Input",
      "label": "Maximum Memory",
      "name": "max_memory",
      "description": "Maximum memory allocation (e.g., 256.GB for large genomes)",
      "defaultValue": "256.GB",
      "required": false,
      "hidden": false,
      "disabled": false
    }
  ],
  "jobConfig": [
    {
      "type": "Select",
      "label": "Compute Resources",
      "name": "system_size",
      "hidden": false,
      "description": "Linked-read assembly requires substantial computational resources. XLARGE recommended for mammalian genomes.",
      "options": [
        {
          "label": "LARGE (64 CPUs, 360GB RAM) - Small genomes (<1 Gb)",
          "value": "large",
          "mapValue": {
            "nodeSize": "LARGE",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "XLARGE (96 CPUs, 540GB RAM) - Recommended for most projects",
          "value": "xlarge",
          "mapValue": {
            "nodeSize": "XLARGE",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xlarge"
    }
  ],
  "tags": [
    {
      "name": "genomics",
      "type": "subfield"
    },
    {
      "name": "genome-assembly",
      "type": "task"
    },
    {
      "name": "de-novo-assembly",
      "type": "task"
    },
    {
      "name": "linked-reads",
      "type": "technology"
    },
    {
      "name": "10x-genomics",
      "type": "technology"
    }
  ]
}