// ITS Fungal Community Profiling Configuration
// Optimized for fungal mycobiome analysis using UNITE database
// Configured for MEDIUM node (32 CPUs, 180GB RAM)

process {
    // Default resource allocation
    cpus = 4
    memory = '16.GB'
    time = '12.h'

    // Quality control processes
    withName:FASTQC {
        cpus = 8
        memory = '16.GB'
        time = '6.h'
    }

    withName:MULTIQC {
        cpus = 4
        memory = '8.GB'
        time = '4.h'
    }

    // Read trimming and primer removal (Cutadapt)
    withName:'.*:CUTADAPT.*' {
        cpus = 8
        memory = '24.GB'
        time = '12.h'
    }

    // DADA2 denoising and ASV inference
    withName:'.*:DADA2_DENOISING.*' {
        cpus = 12
        memory = '48.GB'
        time = '24.h'
    }

    withName:'.*:DADA2_FILTNTRIM.*' {
        cpus = 8
        memory = '32.GB'
        time = '16.h'
    }

    withName:'.*:DADA2_ERR.*' {
        cpus = 8
        memory = '32.GB'
        time = '16.h'
    }

    withName:'.*:DADA2_QUALITY.*' {
        cpus = 4
        memory = '16.GB'
        time = '8.h'
    }

    // Taxonomic assignment with UNITE
    withName:'.*:DADA2_TAXONOMY.*' {
        cpus = 8
        memory = '48.GB'
        time = '16.h'
    }

    withName:'.*:DADA2_ADDSPECIES.*' {
        cpus = 8
        memory = '48.GB'
        time = '16.h'
    }

    // QIIME2 processes
    withName:'.*:QIIME2.*' {
        cpus = 8
        memory = '32.GB'
        time = '16.h'
    }

    // Process labels
    withLabel:process_single { cpus = 1; memory = '6.GB'; time = '6.h' }
    withLabel:process_low { cpus = 4; memory = '16.GB'; time = '12.h' }
    withLabel:process_medium { cpus = 8; memory = '32.GB'; time = '16.h' }
    withLabel:process_high { cpus = 12; memory = '48.GB'; time = '24.h' }
    withLabel:process_long { cpus = 4; memory = '24.GB'; time = '48.h' }
    withLabel:process_high_memory { cpus = 8; memory = '64.GB'; time = '24.h' }

    // Error handling
    errorStrategy = 'retry'
    maxRetries = 2
}

// Container configuration for Camber platform
singularity {
    enabled = true
    autoMounts = true
}

docker {
    enabled = false  // CRITICAL: Docker not available on Camber platform
}

// ITS Fungal Profiling specific parameters - hardcoded for UNITE
params {
    // ITS-specific settings for variable length amplicons
    illumina_pe_its = true  // Enable ITS mode for paired-end with length variability

    // UNITE database for fungal taxonomy (version 10.0 - latest)
    dada_ref_taxonomy = 'unite-fungi=10.0'

    // Add UNITE Species Hypothesis assignments (fungal-specific)
    addsh = true

    // ITS region selection - full ITS region by default
    cut_its = 'full'  // Options: 'full', 'its1', 'its2'

    // Partial ITS sequences handling (default: only full sequences)
    its_partial = 0  // Cutoff for partial ITS sequences (0 = full only)

    // Cutadapt settings for ITS primer removal
    cutadapt_min_overlap = 10  // Minimum primer overlap (increased for ITS)
    cutadapt_max_error_rate = 0.1  // Maximum error rate
    double_primer = true  // Run cutadapt twice to remove potential double primers

    // DADA2 settings optimized for ITS
    max_ee = 2  // Maximum expected errors during filtering

    // Truncation lengths - set to 0 for ITS (highly variable length)
    trunclenf = 0  // No forward truncation for ITS
    trunclenr = 0  // No reverse truncation for ITS

    // Merging strategy for ITS amplicons
    // ITS1 and ITS2 regions have high length variability
    // Use standard merge, but pipeline handles length variability

    // Skip unnecessary tools for this use case
    skip_barrnap = true  // Skip rRNA prediction (not needed for ITS)
    skip_qiime = false  // Keep QIIME2 for diversity analysis
    skip_alpha_rarefaction = false  // Keep rarefaction curves
    skip_abundance_tables = false  // Keep abundance tables
    skip_diversity_indices = false  // Keep diversity metrics

    // Quality filtering
    exclude_taxa = 'mitochondria,chloroplast'  // Remove contaminants
    min_frequency = 1  // Minimum ASV frequency
    min_samples = 1  // Minimum samples per ASV

    // Output options
    save_intermediates = false  // Don't save intermediate files to save space
}