{
  "name": "scrnaseq-comprehensive",
  "title": "Single-Cell RNA-seq: Comprehensive Gene Expression Analysis",
  "description": "Advanced single-cell RNA sequencing analysis pipeline supporting multiple aligners (simpleaf, kallisto, STARsolo, cellranger) with flexible protocol and barcode whitelist configuration for 10x Genomics, DropSeq, and custom single-cell platforms. Perfect for discovering cellular diversity and gene expression patterns.",
  "content": "<h1 class=\"heading-node\">🧬 Single-Cell RNA-seq: Comprehensive Gene Expression Analysis</h1><p class=\"text-node\"><strong>Discover Cellular Diversity Through Gene Expression</strong></p><p class=\"text-node\">Single-cell RNA sequencing (scRNA-seq) reveals the unique gene expression profile of individual cells, uncovering cellular heterogeneity, developmental trajectories, and rare cell populations that traditional bulk RNA-seq cannot detect.</p><img src=\"https://raw.githubusercontent.com/nf-core/scrnaseq/4.0.0//docs/images/scrnaseq_pipeline_V3.0-metro_clean.png\" alt=\"nf-core/scrnaseq workflow\" width=\"600\" height=\"400\"><h2 class=\"heading-node\">🎯 Aligner Selection Guide</h2><p class=\"text-node\">Choose the optimal alignment approach for your experimental design:</p><h3 class=\"heading-node\">📊 simpleaf (Alevin-fry) - <strong>Recommended</strong></h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🚀 Ultra-fast:</strong> Lightning-speed quantification with Alevin-fry</p></li><li><p class=\"text-node\"><strong>🎯 Protocol flexibility:</strong> Define custom chemistries like <code class=\"inline\" spellcheck=\"false\">1{b[16]u[12]x:}2{r:}</code></p></li><li><p class=\"text-node\"><strong>📋 Barcode control:</strong> Use trusted whitelists [WL✓] or auto-derive [WL✗]</p></li><li><p class=\"text-node\"><strong>✅ Best for:</strong> Most single-cell experiments, especially 10x data</p></li></ul><h3 class=\"heading-node\">🔬 kallisto|bustools</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>⚡ Efficient:</strong> Pseudoalignment-based quantification</p></li><li><p class=\"text-node\"><strong>🧬 Protocol support:</strong> Pre-defined protocols (10xv3, dropseq) or custom layouts</p></li><li><p class=\"text-node\"><strong>📋 Whitelist support:</strong> Use known vendor whitelists [WL✓] or derive from data [WL✗]</p></li><li><p class=\"text-node\"><strong>✅ Best for:</strong> Research requiring specific protocol customization</p></li></ul><h3 class=\"heading-node\">⭐ STARsolo</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🎯 10x optimized:</strong> Native support for 10x protocols (V1-V4)</p></li><li><p class=\"text-node\"><strong>🧮 Comprehensive:</strong> Full alignment with detailed mapping statistics</p></li><li><p class=\"text-node\"><strong>⚠️ Whitelist limitation:</strong> Whitelist alone insufficient for non-10x custom layouts [WL✗]</p></li><li><p class=\"text-node\"><strong>✅ Best for:</strong> 10x Genomics datasets requiring full alignment</p></li></ul><h3 class=\"heading-node\">🏢 cellranger/cellrangermulti/cellrangerarc</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🏭 Industry standard:</strong> 10x Genomics official pipeline</p></li><li><p class=\"text-node\"><strong>🔧 Automated:</strong> Protocol detection and optimization</p></li><li><p class=\"text-node\"><strong>📊 Multimodal:</strong> Supports feature barcoding and multi-omics</p></li><li><p class=\"text-node\"><strong>🚫 Whitelist:</strong> Feature/multiplex barcodes are separate inputs (not cell CB whitelist) [WL✗]</p></li><li><p class=\"text-node\"><strong>✅ Best for:</strong> 10x data requiring official processing</p></li></ul><h2 class=\"heading-node\">🧬 Reference Genome Selection</h2><p class=\"text-node\">Choose from a comprehensive collection of reference genomes including:</p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🧑 Human:</strong> GRCh37, GRCh38, CHM13, hg19, hg38 - optimized for human single-cell studies</p></li><li><p class=\"text-node\"><strong>🐭 Model Organisms:</strong> Mouse (GRCm38, GRCm39, mm10, mm39), zebrafish, fly, C. elegans</p></li><li><p class=\"text-node\"><strong>🌱 Plants:</strong> Arabidopsis, rice, maize, sorghum - plant single-cell genomics</p></li><li><p class=\"text-node\"><strong>🐄 Livestock:</strong> Cow, pig, horse, chicken - agricultural and veterinary applications</p></li><li><p class=\"text-node\"><strong>🧫 Microbes:</strong> Yeast - single-cell microbiology research</p></li></ul><p class=\"text-node\">All genomes include curated gene annotations for accurate quantification and downstream analysis.</p><h2 class=\"heading-node\">📋 Barcode Whitelist Strategy</h2><p class=\"text-node\"><strong>Understanding When and How to Use Whitelists:</strong></p><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🎯 Trusted Whitelists [WL✓]:</strong> Use known, kit/lot-specific CB lists for reproducibility across runs</p><ul class=\"list-node\"><li><p class=\"text-node\">Enforce a fixed barcode set</p></li><li><p class=\"text-node\">Best for: Production pipelines, standardized protocols</p></li><li><p class=\"text-node\">Supported by: simpleaf, kallisto</p></li></ul></li><li><p class=\"text-node\"><strong>🔄 Auto-derive from Data [WL✗]:</strong> Let algorithms discover barcodes dynamically</p><ul class=\"list-node\"><li><p class=\"text-node\">Adapts to actual data characteristics</p></li><li><p class=\"text-node\">Best for: Exploratory analysis, unknown barcode distributions</p></li><li><p class=\"text-node\">Supported by: All aligners</p></li></ul></li><li><p class=\"text-node\"><strong>📊 Expected Cells:</strong> Guide cell calling with approximate cell count estimates</p><ul class=\"list-node\"><li><p class=\"text-node\">Not a whitelist, but helps optimize calling thresholds</p></li><li><p class=\"text-node\">Supported by: All aligners</p></li></ul></li></ul><h2 class=\"heading-node\">🧪 Protocol Configuration Examples</h2><p class=\"text-node\"><strong>Standard Protocols:</strong></p><ul class=\"list-node\"><li><p class=\"text-node\"><code class=\"inline\" spellcheck=\"false\">10XV1</code>, <code class=\"inline\" spellcheck=\"false\">10XV2</code>, <code class=\"inline\" spellcheck=\"false\">10XV3</code>, <code class=\"inline\" spellcheck=\"false\">10XV4</code> - Standard 10x Genomics chemistries</p></li><li><p class=\"text-node\"><code class=\"inline\" spellcheck=\"false\">dropseq</code> - Drop-seq protocol</p></li><li><p class=\"text-node\"><code class=\"inline\" spellcheck=\"false\">auto</code> - Automatic detection (cellranger only)</p></li></ul><p class=\"text-node\"><strong>Custom Chemistry Strings:</strong></p><ul class=\"list-node\"><li><p class=\"text-node\">simpleaf: <code class=\"inline\" spellcheck=\"false\">1{b[16]u[12]x:}2{r:}</code> (16bp barcode, 12bp UMI)</p></li><li><p class=\"text-node\">kallisto: <code class=\"inline\" spellcheck=\"false\">0,0,16:0,16,26:1,0,0</code> (R1: 0-16bp barcode, 16-26bp UMI; R2: all read)</p></li></ul><h2 class=\"heading-node\">📋 Sample Sheet Format</h2><p class=\"text-node\">Your CSV samplesheet defines the experiment structure:</p><pre class=\"block-node\"><code>sample,fastq_1,fastq_2,expected_cells\ncontrol_rep1,control_1_R1.fastq.gz,control_1_R2.fastq.gz,5000\ncontrol_rep2,control_2_R1.fastq.gz,control_2_R2.fastq.gz,5000\ntreated_rep1,treated_1_R1.fastq.gz,treated_1_R2.fastq.gz,4500\ntreated_rep2,treated_2_R1.fastq.gz,treated_2_R2.fastq.gz,4500</code></pre><h2 class=\"heading-node\">📊 Comprehensive Results</h2><h3 class=\"heading-node\">Gene Expression Data</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>📊 Count Matrices:</strong> Gene × cell expression matrices in H5, MTX formats</p></li><li><p class=\"text-node\"><strong>🏷️ Cell Metadata:</strong> Quality metrics, cell type assignments, filtering statistics</p></li><li><p class=\"text-node\"><strong>🧬 Feature Data:</strong> Gene annotations, mitochondrial content, expression summaries</p></li></ul><h3 class=\"heading-node\">Quality Control</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>📈 MultiQC Report:</strong> Comprehensive analysis summary with interactive plots</p></li><li><p class=\"text-node\"><strong>🔍 Cell-level QC:</strong> UMI counts, gene detection, mitochondrial percentages</p></li><li><p class=\"text-node\"><strong>📊 Sample Comparisons:</strong> Batch effects, sequencing depth, technical metrics</p></li></ul><h3 class=\"heading-node\">Analysis-Ready Outputs</h3><ul class=\"list-node\"><li><p class=\"text-node\"><strong>🧮 Seurat Objects:</strong> Ready for downstream analysis in R</p></li><li><p class=\"text-node\"><strong>🐍 AnnData Files:</strong> Compatible with scanpy and Python ecosystems</p></li><li><p class=\"text-node\"><strong>📊 Visualization Files:</strong> UMAP/t-SNE coordinates and cluster assignments</p></li></ul><p class=\"text-node\"><strong>Perfect for Research in:</strong> Developmental biology • Cancer research • Immunology • Neuroscience • Plant biology • Stem cell research • Drug discovery • Tissue engineering</p><p class=\"text-node\">Built with <a class=\"link\" href=\"https://www.nextflow.io/\" target=\"_blank\">Nextflow</a> • Powered by <a class=\"link\" href=\"https://nf-co.re/scrnaseq/4.0.0/\" target=\"_blank\">nf-core/scrnaseq v4.0.0</a> • Containerized execution • Continuous integration tested</p>",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/scrnaseq/master/docs/images/nf-core-scrnaseq_logo_light.png",
  "command": "mkdir -p ${outputDir} && cd ${outputDir} && rm -rf prod_apps && git clone https://github.com/CamberCloud-Inc/prod_apps.git && cp prod_apps/nextflow/scrnaseq/platform-constrained-config.config ./ && rm -rf prod_apps && if [ \"${aligner}\" = \"star\" ]; then nextflow run nf-core/scrnaseq -r 4.0.0 -profile test,k8s -c /etc/mpi/nextflow.camber.config -c platform-constrained-config.config --outdir results; elif [ \"${barcode_whitelist}\" != \"none\" ] && [ \"${barcode_whitelist}\" != \"\" ] && [ \"${aligner}\" != \"star\" ] && [ \"${aligner}\" != \"cellranger\" ]; then if [ \"${barcode_whitelist}\" = \"custom\" ] && [ \"${barcode_whitelist_param}\" != \"\" ]; then nextflow run nf-core/scrnaseq -r 4.0.0 --input ${input} --outdir results --aligner ${aligner} --protocol ${protocol} --barcode_whitelist ${barcode_whitelist_param} --genome ${genome} --skip_cellbender -c /etc/mpi/nextflow.camber.config -c platform-constrained-config.config -profile k8s; elif [ \"${barcode_whitelist}\" = \"10x_v3\" ]; then nextflow run nf-core/scrnaseq -r 4.0.0 --input ${input} --outdir results --aligner ${aligner} --protocol ${protocol} --barcode_whitelist 10x_v3 --genome ${genome} --skip_cellbender -c /etc/mpi/nextflow.camber.config -c platform-constrained-config.config -profile k8s; elif [ \"${barcode_whitelist}\" = \"10x_v2\" ]; then nextflow run nf-core/scrnaseq -r 4.0.0 --input ${input} --outdir results --aligner ${aligner} --protocol ${protocol} --barcode_whitelist 10x_v2 --genome ${genome} --skip_cellbender -c /etc/mpi/nextflow.camber.config -c platform-constrained-config.config -profile k8s; fi; else nextflow run nf-core/scrnaseq -r 4.0.0 --input ${input} --outdir results --aligner ${aligner} --protocol ${protocol} --genome ${genome} --skip_cellbender -c /etc/mpi/nextflow.camber.config -c platform-constrained-config.config -profile k8s; fi && echo \"Pipeline completed\"",
  "engineType": "NEXTFLOW",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Select compute resources. Start with XSMALL for testing, scale up for production data.",
      "options": [
        {
          "label": "XSMALL (4 CPUs, 15GB RAM) - Testing/nf-core test data",
          "value": "xsmall",
          "mapValue": {
            "nodeSize": "XSMALL",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "SMALL (8 CPUs, 30GB RAM) - Small datasets (1-3 samples)",
          "value": "small",
          "mapValue": {
            "nodeSize": "SMALL",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "MEDIUM (32 CPUs, 120GB RAM) - Standard datasets (5-20 samples)",
          "value": "medium",
          "mapValue": {
            "nodeSize": "MEDIUM",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "LARGE (64 CPUs, 360GB RAM) - Large datasets (20-50 samples)",
          "value": "large",
          "mapValue": {
            "nodeSize": "LARGE",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "xsmall"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "label": "Sample Sheet",
      "name": "input",
      "description": "CSV samplesheet with columns: sample, fastq_1, fastq_2, expected_cells.",
      "defaultValue": "https://raw.githubusercontent.com/nf-core/test-datasets/scrnaseq/samplesheet-2-0.csv",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allow_files": true,
        "allow_folders": true,
        "allowed_file_types": []
      }
    },
    {
      "type": "Stash File",
      "label": "Output Directory",
      "name": "outputDir",
      "description": "Output directory for analysis results.",
      "defaultValue": "./",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allow_files": true,
        "allow_folders": true,
        "allowed_file_types": []
      }
    },
    {
      "type": "Select",
      "label": "Alignment Method",
      "name": "aligner",
      "description": "Alignment algorithm: simpleaf/kallisto support whitelists, STARsolo/cellranger use auto-derivation.",
      "defaultValue": "star",
      "hidden": false,
      "required": true,
      "disabled": false,
      "options": [
        {
          "label": "simpleaf (Alevin-fry) - Fast & Flexible [Whitelist Supported]",
          "value": "simpleaf"
        },
        {
          "label": "kallisto - Pseudoalignment with BUStools [Whitelist Supported]",
          "value": "kallisto"
        },
        {
          "label": "STARsolo - Full alignment (10x optimized)",
          "value": "star"
        },
        {
          "label": "cellranger - 10x Genomics official pipeline [10x Only]",
          "value": "cellranger"
        }
      ]
    },
    {
      "type": "Select",
      "label": "Single-Cell Protocol",
      "name": "protocol",
      "description": "Single-cell protocol: use 10X standards or custom chemistry strings for simpleaf/kallisto.",
      "defaultValue": "10XV2",
      "hidden": false,
      "required": false,
      "disabled": false,
      "options": [
        {
          "label": "10X v2 Chemistry",
          "value": "10XV2"
        },
        {
          "label": "10X v3 Chemistry (Most Common)",
          "value": "10XV3"
        },
        {
          "label": "10X v1 Chemistry",
          "value": "10XV1"
        },
        {
          "label": "10X v4 Chemistry",
          "value": "10XV4"
        },
        {
          "label": "Auto-detect (cellranger only)",
          "value": "auto"
        },
        {
          "label": "Custom Chemistry String (simpleaf: 1{b[16]u[12]x:}2{r:})",
          "value": "1{b[16]u[12]x:}2{r:}"
        },
        {
          "label": "Custom Chemistry String (kallisto: 0,0,16:0,16,26:1,0,0)",
          "value": "0,0,16:0,16,26:1,0,0"
        },
        {
          "label": "DropSeq Protocol",
          "value": "dropseq"
        },
        {
          "label": "No Protocol Override",
          "value": "none"
        }
      ]
    },
    {
      "type": "Select",
      "label": "Reference Genome",
      "name": "genome",
      "description": "Reference genome to use for alignment and gene expression quantification.",
      "defaultValue": "GRCm38",
      "hidden": false,
      "required": true,
      "disabled": false,
      "options": [
        {"label": "Human GRCh37 (Ensembl)", "value": "GRCh37"},
        {"label": "Human GRCh38 (NCBI)", "value": "GRCh38"},
        {"label": "Human CHM13 (UCSC)", "value": "CHM13"},
        {"label": "Mouse GRCm38 (Ensembl)", "value": "GRCm38"},
        {"label": "Mouse GRCm39 (Ensembl)", "value": "GRCm39"},
        {"label": "Arabidopsis TAIR10 (Ensembl)", "value": "TAIR10"},
        {"label": "Cow UMD3.1 (Ensembl)", "value": "UMD3.1"},
        {"label": "C. elegans WBcel235 (Ensembl)", "value": "WBcel235"},
        {"label": "Dog CanFam3.1 (Ensembl)", "value": "CanFam3.1"},
        {"label": "Zebrafish GRCz10 (Ensembl)", "value": "GRCz10"},
        {"label": "Zebrafish GRCz11 (Ensembl)", "value": "GRCz11"},
        {"label": "Fly BDGP6 (Ensembl)", "value": "BDGP6"},
        {"label": "Chicken Galgal4 (Ensembl)", "value": "Galgal4"},
        {"label": "Rat Rnor_6.0 (Ensembl)", "value": "Rnor_6.0"},
        {"label": "Yeast R64-1-1 (Ensembl)", "value": "R64-1-1"},
        {"label": "Human hg38 (UCSC)", "value": "hg38"},
        {"label": "Human hg19 (UCSC)", "value": "hg19"},
        {"label": "Mouse mm10 (UCSC)", "value": "mm10"},
        {"label": "Mouse mm39 (UCSC)", "value": "mm39"}
      ]
    },
    {
      "type": "Select",
      "label": "Barcode Whitelist Strategy",
      "name": "barcode_whitelist",
      "description": "Barcode strategy: use trusted whitelists (simpleaf/kallisto only) or auto-derive from data.",
      "defaultValue": "none",
      "hidden": false,
      "required": false,
      "disabled": false,
      "options": [
        {
          "label": "Auto-derive from data (recommended for all aligners)",
          "value": "none"
        },
        {
          "label": "Use 10x v3 whitelist (simpleaf/kallisto only)",
          "value": "10x_v3"
        },
        {
          "label": "Use 10x v2 whitelist (simpleaf/kallisto only)",
          "value": "10x_v2"
        },
        {
          "label": "Custom whitelist file path (simpleaf/kallisto only)",
          "value": "custom"
        }
      ]
    },
    {
      "type": "Stash File",
      "label": "Custom Whitelist File Path",
      "name": "barcode_whitelist_param",
      "description": "Custom whitelist file path (only when 'custom' selected above).",
      "defaultValue": "",
      "hidden": false,
      "required": false,
      "disabled": false,
      "restrictions": {
        "allow_files": true,
        "allow_folders": true,
        "allowed_file_types": []
      }
    }
  ],
  "tags": [
    {"name": "genomics", "type": "subfield"},
    {"name": "analysis", "type": "task"},
    {"name": "biology", "type": "field"}
  ]
}