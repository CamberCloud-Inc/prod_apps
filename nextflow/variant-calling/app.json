{
  "name": "variant-calling-sarek",
  "title": "Variant Calling: Comprehensive Genomic Analysis",
  "description": "Advanced genomic variant calling pipeline powered by nf-core/sarek for detecting SNVs, INDELs, structural variants, and copy number variations from whole genome, whole exome, or targeted sequencing data. Supports germline, somatic, and tumor-normal pair analysis with comprehensive quality control and annotation.",
  "content": "<h1 class=\\\"heading-node\\\">Variant Calling: Comprehensive Genomic Analysis</h1><p class=\\\"text-node\\\"><strong>Discover Genetic Variations Across the Genome</strong></p><p class=\\\"text-node\\\">nf-core/sarek is a sophisticated bioinformatics pipeline designed for comprehensive genomic variant detection from high-throughput sequencing data. Originally developed for human and mouse genomics, this pipeline adapts seamlessly to any species with a reference genome, making it ideal for comparative genomics and model organism studies.</p><h2 class=\\\"heading-node\\\">Analysis Capabilities</h2><h3 class=\\\"heading-node\\\">📊 SNVs & INDELs</h3><p class=\\\"text-node\\\"><strong>Tools:</strong> GATK HaplotypeCaller, DeepVariant, freebayes<br><strong>Applications:</strong> Single nucleotide variants and small insertions/deletions</p><h3 class=\\\"heading-node\\\">🔗 Structural Variants</h3><p class=\\\"text-node\\\"><strong>Tools:</strong> Manta, TIDDIT<br><strong>Applications:</strong> Large genomic rearrangements and chromosomal alterations</p><h3 class=\\\"heading-node\\\">📈 Copy Number Variations</h3><p class=\\\"text-node\\\"><strong>Tools:</strong> CNVkit, Control-FREEC, ASCAT<br><strong>Applications:</strong> CNV detection and allele-specific copy number analysis</p><h3 class=\\\"heading-node\\\">🧬 Somatic Variants</h3><p class=\\\"text-node\\\"><strong>Tools:</strong> Mutect2, Strelka2<br><strong>Applications:</strong> Tumor-specific mutations and cancer genomics</p><h3 class=\\\"heading-node\\\">🔍 Microsatellite Instability</h3><p class=\\\"text-node\\\"><strong>Tools:</strong> MSIsensor-pro<br><strong>Applications:</strong> MSI detection for cancer research</p><h2 class=\\\"heading-node\\\">Supported Analysis Types</h2><ul class=\\\"list-node\\\"><li><p class=\\\"text-node\\\"><strong>🧪 Germline Analysis:</strong> Normal tissue samples → Constitutional variants, hereditary disease studies</p></li><li><p class=\\\"text-node\\\"><strong>🎯 Somatic Analysis:</strong> Tumor-normal pairs → Cancer genomics, mutation profiling</p></li><li><p class=\\\"text-node\\\"><strong>🔬 Tumor-Only:</strong> Single tumor sample → Cancer studies with artifact filtering</p></li><li><p class=\\\"text-node\\\"><strong>👥 Multi-Sample:</strong> Multiple related samples → Family studies, population genomics</p></li></ul><h2 class=\\\"heading-node\\\">Input Requirements</h2><h3 class=\\\"heading-node\\\">CSV Samplesheet Format</h3><p class=\\\"text-node\\\">The pipeline requires a CSV samplesheet defining your experimental design:</p><pre class=\\\"block-node\\\"><code>patient,sample,lane,fastq_1,fastq_2\\npatient1,normal,1,normal_R1.fastq.gz,normal_R2.fastq.gz\\npatient1,tumor,1,tumor_R1.fastq.gz,tumor_R2.fastq.gz\\npatient2,sample,1,sample_R1.fastq.gz,sample_R2.fastq.gz</code></pre><h3 class=\\\"heading-node\\\">Column Specifications</h3><ul class=\\\"list-node\\\"><li><p class=\\\"text-node\\\"><strong>✅ patient</strong> (REQUIRED): Patient/subject identifier for grouping related samples<br><em>Examples:</em> <code class=\\\"inline\\\">patient1, subject_A, TCGA_001</code></p></li><li><p class=\\\"text-node\\\"><strong>✅ sample</strong> (REQUIRED): Sample identifier (use 'normal' and 'tumor' for paired analysis)<br><em>Examples:</em> <code class=\\\"inline\\\">normal, tumor, sample, control</code></p></li><li><p class=\\\"text-node\\\"><strong>✅ lane</strong> (REQUIRED): Sequencing lane number (use 1 if unknown)<br><em>Examples:</em> <code class=\\\"inline\\\">1, 2, 3, 4</code></p></li><li><p class=\\\"text-node\\\"><strong>✅ fastq_1</strong> (REQUIRED): Path to forward read FASTQ file<br><em>Example:</em> <code class=\\\"inline\\\">sample_R1.fastq.gz</code></p></li><li><p class=\\\"text-node\\\"><strong>❌ fastq_2</strong> (OPTIONAL): Path to reverse read FASTQ file (omit for single-end)<br><em>Example:</em> <code class=\\\"inline\\\">sample_R2.fastq.gz</code></p></li></ul><h2 class=\\\"heading-node\\\">Variant Calling Tools</h2><p class=\\\"text-node\\\">Select from industry-standard variant callers based on your analysis needs:</p><h3 class=\\\"heading-node\\\">🧬 Germline Callers</h3><p class=\\\"text-node\\\"><strong>GATK HaplotypeCaller, DeepVariant, freebayes</strong><br>Best for: Constitutional variants, hereditary diseases</p><h3 class=\\\"heading-node\\\">🎯 Somatic Callers</h3><p class=\\\"text-node\\\"><strong>Mutect2, Strelka2</strong><br>Best for: Tumor-normal analysis, cancer genomics</p><h3 class=\\\"heading-node\\\">🔗 Structural Variants</h3><p class=\\\"text-node\\\"><strong>Manta, TIDDIT</strong><br>Best for: Large rearrangements, chromosomal alterations</p><h3 class=\\\"heading-node\\\">📈 Copy Number</h3><p class=\\\"text-node\\\"><strong>CNVkit, Control-FREEC, ASCAT</strong><br>Best for: CNV detection, allele-specific analysis</p><h3 class=\\\"heading-node\\\">🔧 Specialized</h3><p class=\\\"text-node\\\"><strong>mpileup, MSIsensor-pro</strong><br>Best for: Basic calling, microsatellite instability</p><h2 class=\\\"heading-node\\\">Quality Control & Preprocessing</h2><ul class=\\\"list-node\\\"><li><p class=\\\"text-node\\\"><strong>📊 Read QC:</strong> FastQC quality assessment and adapter trimming</p></li><li><p class=\\\"text-node\\\"><strong>🎯 Alignment:</strong> BWA-MEM2 mapping with duplicate marking</p></li><li><p class=\\\"text-node\\\"><strong>⚖️ Base Recalibration:</strong> GATK base quality score recalibration</p></li><li><p class=\\\"text-node\\\"><strong>🔍 Contamination Check:</strong> Cross-sample contamination detection</p></li></ul><h2 class=\\\"heading-node\\\">Output Files</h2><h3 class=\\\"heading-node\\\">🗂️ Variant Calls (VCF)</h3><p class=\\\"text-node\\\">Standard variant call format with comprehensive annotations</p><h3 class=\\\"heading-node\\\">✅ Filtered Variants (VCF)</h3><p class=\\\"text-node\\\">High-confidence variant calls passing quality filters</p><h3 class=\\\"heading-node\\\">📋 Quality Reports (HTML)</h3><p class=\\\"text-node\\\">MultiQC comprehensive analysis summary</p><h3 class=\\\"heading-node\\\">📁 Alignment Files (BAM/CRAM)</h3><p class=\\\"text-node\\\">Processed alignment files with indices</p><h3 class=\\\"heading-node\\\">📊 Statistics (TSV/JSON)</h3><p class=\\\"text-node\\\">Coverage, mapping quality, and variant metrics</p><h2 class=\\\"heading-node\\\">Applications</h2><p class=\\\"text-node\\\"><strong>Perfect for:</strong> Cancer genomics • Rare disease studies • Population genomics • Pharmacogenomics • Agricultural genomics • Model organism research • Precision medicine • Genetic screening</p><p class=\\\"text-node\\\">Built with <a class=\\\"link\\\" href=\\\"https://www.nextflow.io/\\\" target=\\\"_blank\\\">Nextflow</a> • Powered by <a class=\\\"link\\\" href=\\\"https://nf-co.re/sarek/3.5.1/\\\" target=\\\"_blank\\\">nf-core/sarek v3.5.1</a> • Containerized execution • Continuous integration tested</p>",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/sarek/3.5.1/docs/images/nf-core-sarek_logo_light.png",
  "command": "nextflow run nf-core/sarek --input ${input} --outdir ${output} --tools ${tools} --genome ${genome} -r 3.5.1",
  "engineType": "NEXTFLOW",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Choose computing resources based on dataset size and analysis complexity. Variant calling requires substantial memory for large genomes.",
      "options": [
        {
          "label": "Small (16 CPUs, 90GB RAM) - WGS single sample",
          "value": "small",
          "mapValue": {
            "nodeSize": "SMALL",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "Medium (32 CPUs, 180GB RAM) - WGS multiple samples",
          "value": "medium",
          "mapValue": {
            "nodeSize": "MEDIUM",
            "numNodes": 1,
            "withGpu": false
          }
        },
        {
          "label": "Large (64 CPUs, 360GB RAM) - Recommended",
          "value": "large",
          "mapValue": {
            "nodeSize": "LARGE",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "large"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "label": "Samplesheet CSV",
      "name": "input",
      "description": "CSV samplesheet with columns: patient, sample, lane, fastq_1, fastq_2. Defines experimental design and FASTQ file locations.",
      "defaultValue": "",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allow_files": true,
        "allow_folders": false,
        "allowed_file_types": ["csv"]
      }
    },
    {
      "type": "Stash File",
      "label": "Output Directory",
      "name": "output",
      "description": "Directory where variant calling results, QC reports, and intermediate files will be saved.",
      "defaultValue": "./",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allow_files": false,
        "allow_folders": true,
        "allowed_file_types": []
      }
    },
    {
      "type": "Select",
      "label": "Variant Calling Tools",
      "name": "tools",
      "description": "Select variant calling algorithms based on your analysis type: germline (HaplotypeCaller, DeepVariant, freebayes), somatic (Mutect2, Strelka), structural variants (Manta, TIDDIT), or copy number (CNVkit, ASCAT).",
      "defaultValue": "haplotypecaller",
      "hidden": false,
      "required": true,
      "disabled": false,
      "options": [
        {
          "label": "GATK HaplotypeCaller - Germline SNVs/INDELs [Recommended]",
          "value": "haplotypecaller"
        },
        {
          "label": "DeepVariant - Deep learning variant calling",
          "value": "deepvariant"
        },
        {
          "label": "freebayes - Bayesian haplotype-based calling",
          "value": "freebayes"
        },
        {
          "label": "Mutect2 - Somatic SNVs/INDELs",
          "value": "mutect2"
        },
        {
          "label": "Strelka2 - Fast somatic variant calling",
          "value": "strelka"
        },
        {
          "label": "Manta - Structural variant detection",
          "value": "manta"
        },
        {
          "label": "TIDDIT - Chromosomal rearrangements",
          "value": "tiddit"
        },
        {
          "label": "CNVkit - Copy number variation detection",
          "value": "cnvkit"
        },
        {
          "label": "Control-FREEC - Copy number and allelic content",
          "value": "controlfreec"
        },
        {
          "label": "ASCAT - Allele-specific copy number",
          "value": "ascat"
        },
        {
          "label": "mpileup - Basic variant calling",
          "value": "mpileup"
        },
        {
          "label": "MSIsensor-pro - Microsatellite instability",
          "value": "msisensorpro"
        }
      ]
    },
    {
      "type": "Select",
      "label": "Reference Genome",
      "name": "genome",
      "description": "Reference genome assembly for read alignment and variant calling. Choose the appropriate build for your species and analysis requirements.",
      "defaultValue": "GATK.GRCh38",
      "hidden": false,
      "required": true,
      "disabled": false,
      "options": [
        {"label": "Human GRCh38 (GATK) [Recommended]", "value": "GATK.GRCh38"},
        {"label": "Human GRCh37 (GATK)", "value": "GATK.GRCh37"},
        {"label": "Human GRCh37 (Ensembl)", "value": "GRCh37"},
        {"label": "Human GRCh38 (NCBI)", "value": "GRCh38"},
        {"label": "Human CHM13 (T2T)", "value": "CHM13"},
        {"label": "Human hg38 (UCSC)", "value": "hg38"},
        {"label": "Human hg19 (UCSC)", "value": "hg19"},
        {"label": "Mouse GRCm38 (Ensembl)", "value": "GRCm38"},
        {"label": "Mouse mm10 (UCSC)", "value": "mm10"},
        {"label": "Mouse GRCm39 (Ensembl)", "value": "GRCm39"},
        {"label": "Mouse mm39 (UCSC)", "value": "mm39"},
        {"label": "Arabidopsis TAIR10", "value": "TAIR10"},
        {"label": "Cow UMD3.1", "value": "UMD3.1"},
        {"label": "Cow bosTau8", "value": "bosTau8"},
        {"label": "C. elegans WBcel235", "value": "WBcel235"},
        {"label": "C. elegans ce10", "value": "ce10"},
        {"label": "Dog CanFam3.1", "value": "CanFam3.1"},
        {"label": "Dog canFam3", "value": "canFam3"},
        {"label": "Zebrafish GRCz10", "value": "GRCz10"},
        {"label": "Zebrafish danRer10", "value": "danRer10"},
        {"label": "Zebrafish GRCz11", "value": "GRCz11"},
        {"label": "Drosophila BDGP6", "value": "BDGP6"},
        {"label": "Drosophila dm6", "value": "dm6"},
        {"label": "Horse EquCab2", "value": "EquCab2"},
        {"label": "Horse equCab2", "value": "equCab2"},
        {"label": "Chicken Galgal4", "value": "Galgal4"},
        {"label": "Chicken galGal4", "value": "galGal4"},
        {"label": "Chimpanzee CHIMP2.1.4", "value": "CHIMP2.1.4"},
        {"label": "Chimpanzee panTro4", "value": "panTro4"},
        {"label": "Rat Rnor_5.0", "value": "Rnor_5.0"},
        {"label": "Rat Rnor_6.0", "value": "Rnor_6.0"},
        {"label": "Rat rn6", "value": "rn6"},
        {"label": "Yeast R64-1-1", "value": "R64-1-1"},
        {"label": "Yeast sacCer3", "value": "sacCer3"},
        {"label": "Pig Sscrofa10.2", "value": "Sscrofa10.2"},
        {"label": "Pig susScr3", "value": "susScr3"},
        {"label": "Test data (small dataset)", "value": "test"}
      ]
    }
  ]
}