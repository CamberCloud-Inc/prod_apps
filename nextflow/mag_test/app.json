{
  "name": "mag-test",
  "title": "nf-core/mag: Metagenome Assembly and Binning",
  "description": "A comprehensive bioinformatics pipeline for assembly, binning and annotation of metagenomes supporting both short and long-read sequencing technologies.",
  "content": "<h2 class=\"heading-node\"><strong>Introduction</strong></h2><p class=\"text-node\"><strong>nf-core/mag</strong> is a comprehensive bioinformatics analysis pipeline for metagenome assembly, binning and annotation supporting both short and long-read sequencing technologies. The pipeline processes raw FastQ data through quality control, taxonomic classification, assembly, binning, and detailed annotation steps.</p><img src=\"https://raw.githubusercontent.com/nf-core/mag/3.0.1//docs/images/mag_workflow.png\" alt=\"nf-core/mag workflow diagram\" title=\"\" width=\"600\" height=\"400\"><p class=\"text-node\">The pipeline is built using <a class=\"link\" href=\"https://www.nextflow.io/\"><u>Nextflow</u></a>, a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker / Singularity containers making installation trivial and results highly reproducible.</p><h2 class=\"heading-node\"><strong>Pipeline Summary</strong></h2><p class=\"text-node\"><strong>Key workflow steps include:</strong></p><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Quality Control:</strong> Trim reads and adapters using fastp and Porechop, perform quality checks with FastQC</li><li class=\"list-item-node\"><strong>Taxonomic Analysis:</strong> Assign taxonomy to reads using Centrifuge and/or Kraken2</li><li class=\"list-item-node\"><strong>Assembly:</strong> Perform assemblies using MEGAHIT and SPAdes with quality validation via Quast</li><li class=\"list-item-node\"><strong>Genome Binning:</strong> Use MetaBAT2, MaxBin2, and/or CONCOCT for binning with quality assessment via Busco, CheckM, and optionally GUNC</li><li class=\"list-item-node\"><strong>Annotation:</strong> Predict protein-coding genes with Prodigal, annotate with Prokka, assign taxonomy using GTDB-Tk</li></ul><p class=\"text-node\"><strong>Advanced Features:</strong> Group-wise co-assembly and co-abundance computation, ancient DNA validation, virus and eukaryote identification, optional bin refinement with DAS Tool, and comprehensive reporting with MultiQC.</p><blockquote class=\"block-node\"><p class=\"text-node\"><em>This pipeline supports flexible input options including individual files or sample sheets, making it suitable for both small-scale studies and large metagenomics projects.</em></p></blockquote>",
  "version": "1.0.0",
  "engineType": "NEXTFLOW",
  "command": "export NXF_CACHE_DIR=/camber_work/temp/.nextflow; export NXF_LOG_FILE=/home/camber/jobs/outputs/nextflow.log; cd /home/camber/ && nextflow run nf-core/mag --input ${input} --outdir ${output} --skip_krona ${skipKrona} --skip_gtdbtk ${skipGtdbtk} --skip_maxbin2 ${skipMaxbin2} --skip_prokka ${skipProkka} --skip_prodigal ${skipProdigal} --skip_concoct ${skipConcoct} --skip_checkm ${skipCheckm} --skip_busco ${skipBusco} --megahit_fix_cpu_1 ${megahitFixCpu1} --spades_fix_cpus ${spadesfixCpus} --bbnorm_target ${bbnormTarget} --coassemble_group ${coassembleGroup} -r ${revision} -c /etc/mpi/nextflow.camber.config -ansi-log false -profile k8s",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/mag/3.0.1/docs/images/nf-core-mag_logo_light.png",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Selecting a preset will prefill the node configuration below. You can still edit the values.",
      "options": [
        {
          "label": "Default",
          "value": "default",
          "mapValue": {
            "nodeSize": "MEDIUM",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "default"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "label": "Input Samplesheet",
      "name": "input",
      "description": "CSV samplesheet containing sample information with columns: sample, group, short_reads_1, short_reads_2, long_reads",
      "defaultValue": "",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allowFiles": true,
        "allowFolders": false,
        "allowedFileTypes": [".csv"]
      }
    },
    {
      "type": "Stash File",
      "label": "Output Directory",
      "name": "output",
      "description": "Output directory for pipeline results",
      "defaultValue": "",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allowFiles": false,
        "allowFolders": true,
        "allowedFileTypes": []
      }
    },
    {
      "type": "Switch",
      "label": "Skip Krona",
      "name": "skipKrona",
      "description": "Skip Krona taxonomy visualization",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip GTDB-Tk",
      "name": "skipGtdbtk",
      "description": "Skip GTDB-Tk taxonomic classification",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip MaxBin2",
      "name": "skipMaxbin2",
      "description": "Skip MaxBin2 binning tool",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip Prokka",
      "name": "skipProkka",
      "description": "Skip Prokka annotation",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip Prodigal",
      "name": "skipProdigal",
      "description": "Skip Prodigal gene prediction",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip CONCOCT",
      "name": "skipConcoct",
      "description": "Skip CONCOCT binning tool",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip CheckM",
      "name": "skipCheckm",
      "description": "Skip CheckM bin quality assessment",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Skip BUSCO",
      "name": "skipBusco",
      "description": "Skip BUSCO bin quality assessment",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "MEGAHIT Fix CPU 1",
      "name": "megahitFixCpu1",
      "description": "Fix MEGAHIT to use 1 CPU (false = use multiple CPUs)",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Input",
      "label": "SPAdes Fix CPUs",
      "name": "spadesfixCpus",
      "description": "Number of CPUs to fix for SPAdes assembler",
      "defaultValue": "8",
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Input",
      "label": "BBnorm Target",
      "name": "bbnormTarget",
      "description": "Maximum depth for BBnorm normalization (default: 100)",
      "defaultValue": "50",
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Co-assemble Group",
      "name": "coassembleGroup",
      "description": "Co-assemble samples within groups defined in samplesheet",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Select",
      "label": "Pipeline Revision",
      "name": "revision",
      "description": "nf-core/mag pipeline version",
      "defaultValue": "3.0.1",
      "hidden": false,
      "required": true,
      "disabled": false,
      "options": [
        {
          "label": "3.0.1",
          "value": "3.0.1"
        },
        {
          "label": "3.0.0", 
          "value": "3.0.0"
        }
      ]
    }
  ]
}