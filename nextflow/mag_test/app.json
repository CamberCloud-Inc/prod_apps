{
  "name": "mag-test",
  "title": "Metagenome Assembly and Binning Analysis",
  "description": "Comprehensive pipeline for metagenome assembly, binning, and annotation. Supports both short and long-read sequencing data. Ideal for microbiome research and environmental genomics studies.",
  "content": "<h2 class=\"heading-node\">ðŸ§¬ Overview</h2><p class=\"text-node\">The <strong>Metagenome Assembly and Binning Analysis</strong> pipeline enables comprehensive analysis of complex microbial communities from environmental or clinical samples. This workflow reconstructs individual genomes from mixed microbial populations, providing insights into community composition and functional potential.</p><img src=\"https://raw.githubusercontent.com/nf-core/mag/3.0.1/docs/images/mag_workflow.png\" alt=\"MAG workflow: From raw reads through assembly, binning, to annotated genomes\"><h2 class=\"heading-node\">ðŸ”§ Main Capabilities</h2><p class=\"text-node\">This pipeline integrates state-of-the-art tools for metagenome analysis:</p><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Quality Processing:</strong> FastP/Porechop for adapter trimming, BBNorm for coverage normalization</li><li class=\"list-item-node\"><strong>Taxonomic Profiling:</strong> Centrifuge/Kraken2 for rapid taxonomic classification</li><li class=\"list-item-node\"><strong>Assembly:</strong> MEGAHIT/SPAdes for efficient metagenome assembly</li><li class=\"list-item-node\"><strong>Genome Binning:</strong> MetaBAT2 for contig clustering into genome bins</li><li class=\"list-item-node\"><strong>Quality Assessment:</strong> CheckM/BUSCO for genome completeness evaluation</li><li class=\"list-item-node\"><strong>Annotation:</strong> Prokka/Prodigal for gene prediction and functional annotation</li></ul><h2 class=\"heading-node\">ðŸ“‹ Input Parameters</h2><p class=\"text-node\"><strong>Samplesheet Format:</strong> Provide a CSV file with sample information following this structure:</p><pre><code>sample,group,short_reads_1,short_reads_2,long_reads\nsample1,group1,/path/to/R1.fastq.gz,/path/to/R2.fastq.gz,\nsample2,group1,/path/to/R1.fastq.gz,/path/to/R2.fastq.gz,/path/to/long.fastq.gz</code></pre><ul class=\"list-node\"><li class=\"list-item-node\"><strong>sample:</strong> Unique sample identifier</li><li class=\"list-item-node\"><strong>group:</strong> Group name for co-assembly (samples with same group are assembled together)</li><li class=\"list-item-node\"><strong>short_reads_1/2:</strong> Paths to paired-end Illumina reads</li><li class=\"list-item-node\"><strong>long_reads:</strong> Path to long-read data (optional, for hybrid assembly)</li></ul><blockquote class=\"block-node\"><p class=\"text-node\">ðŸ’¡ <strong>Resource Optimization:</strong> For optimal resource consumption, the number of nodes should not be greater than the number of samples in your samplesheet.</p></blockquote><h2 class=\"heading-node\">ðŸ”¬ Scientific Relevance & Use Cases</h2><p class=\"text-node\">This pipeline is essential for:</p><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Environmental Genomics:</strong> Characterizing microbial diversity in soil, water, and air samples</li><li class=\"list-item-node\"><strong>Human Microbiome Studies:</strong> Understanding gut, skin, or oral microbiota composition</li><li class=\"list-item-node\"><strong>Biotechnology:</strong> Discovering novel enzymes and metabolic pathways</li><li class=\"list-item-node\"><strong>Clinical Microbiology:</strong> Identifying pathogens in complex infections</li></ul><p class=\"text-node\">The pipeline enables recovery of complete or near-complete genomes from unculturable microorganisms, advancing our understanding of microbial ecology and evolution.</p><h2 class=\"heading-node\">ðŸ“Š Expected Outputs</h2><ul class=\"list-node\"><li class=\"list-item-node\"><strong>Assembled Contigs:</strong> FASTA files with assembled sequences</li><li class=\"list-item-node\"><strong>Genome Bins:</strong> Individual microbial genomes recovered from the metagenome</li><li class=\"list-item-node\"><strong>Quality Reports:</strong> MultiQC report with comprehensive quality metrics</li><li class=\"list-item-node\"><strong>Taxonomic Profiles:</strong> Community composition at various taxonomic levels</li><li class=\"list-item-node\"><strong>Functional Annotations:</strong> Predicted genes and their functions</li></ul><hr><p class=\"text-node\"><em>Built with <a href=\"https://www.nextflow.io/\">Nextflow</a> and the <a href=\"https://nf-co.re/mag\">nf-core/mag</a> pipeline v3.0.1</em></p>",
  "version": "1.0.0",
  "engineType": "NEXTFLOW",
  "command": "export NXF_CACHE_DIR=/camber_work/temp/.nextflow; export NXF_LOG_FILE=/home/camber/jobs/outputs/nextflow.log; cd /home/camber/ && nextflow run nf-core/mag --input ${input} --outdir ${output} --skip_krona --skip_gtdbtk --skip_maxbin2 --skip_prokka --skip_prodigal --skip_concoct --skip_checkm --skip_busco --megahit_fix_cpu_1 false --spades_fix_cpus 8 --bbnorm_target 50 --coassemble_group -r 3.0.1 -c /etc/mpi/nextflow.camber.config -ansi-log false -profile k8s",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/mag/3.0.1/docs/images/nf-core-mag_logo_light.png",
  "jobConfig": [
    {
      "type": "Select",
      "label": "System Size",
      "name": "system_size",
      "hidden": true,
      "description": "Selecting a preset will prefill the node configuration below. You can still edit the values.",
      "options": [
        {
          "label": "Default",
          "value": "default",
          "mapValue": {
            "nodeSize": "MEDIUM",
            "numNodes": 1,
            "withGpu": false
          }
        }
      ],
      "defaultValue": "default"
    }
  ],
  "spec": [
    {
      "type": "Stash File",
      "label": "Input Samplesheet",
      "name": "input",
      "description": "CSV file with sample information and FASTQ file paths.",
      "defaultValue": "",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allowFiles": true,
        "allowFolders": false,
        "allowedFileTypes": ["csv"]
      }
    },
    {
      "type": "Stash File",
      "label": "Output Directory",
      "name": "output",
      "description": "Directory where results will be saved.",
      "defaultValue": "",
      "hidden": false,
      "required": true,
      "disabled": false,
      "restrictions": {
        "allowFiles": false,
        "allowFolders": true,
        "allowedFileTypes": []
      }
    },
    {
      "type": "Switch",
      "label": "Skip Krona",
      "name": "skipKrona",
      "description": "Skip Krona visualization output.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_krona",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip GTDB-Tk",
      "name": "skipGtdbtk",
      "description": "Skip GTDB-Tk taxonomy assignment.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_gtdbtk",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip MaxBin2",
      "name": "skipMaxbin2",
      "description": "Skip MaxBin2 genome binning.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_maxbin2",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip Prokka",
      "name": "skipProkka",
      "description": "Skip Prokka gene annotation.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_prokka",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip Prodigal",
      "name": "skipProdigal",
      "description": "Skip Prodigal gene finding.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_prodigal",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip CONCOCT",
      "name": "skipConcoct",
      "description": "Skip CONCOCT genome binning.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_concoct",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip CheckM",
      "name": "skipCheckm",
      "description": "Skip CheckM quality evaluation.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_checkm",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "Skip BUSCO",
      "name": "skipBusco",
      "description": "Skip BUSCO completeness assessment.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--skip_busco",
        "false": ""
      }
    },
    {
      "type": "Switch",
      "label": "MEGAHIT Fix CPU 1",
      "name": "megahitFixCpu1",
      "description": "Limit MEGAHIT to single CPU usage.",
      "defaultValue": false,
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Input",
      "label": "SPAdes Fix CPUs",
      "name": "spadesfixCpus",
      "description": "Number of CPUs for SPAdes assembly.",
      "defaultValue": "8",
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Input",
      "label": "BBnorm Target",
      "name": "bbnormTarget",
      "description": "Target coverage depth for BBnorm.",
      "defaultValue": "50",
      "hidden": false,
      "required": false,
      "disabled": false
    },
    {
      "type": "Switch",
      "label": "Co-assemble Group",
      "name": "coassembleGroup",
      "description": "Enable group-based co-assembly.",
      "defaultValue": true,
      "hidden": false,
      "required": false,
      "disabled": false,
      "mapToCommand": {
        "true": "--coassemble_group",
        "false": ""
      }
    }
  ],
  "tags": [
		{
			"id": "fb1ee42a-629a-4d99-9e7f-1da3c5f7a691",
			"name": "biology",
			"type": "field"
		},
		{
			"id": "6e4e74a4-560e-4674-95c3-60fe895b8c91",
			"name": "genomics",
			"type": "subfield"
		},
		{
			"id": "831477f4-f572-4e27-af83-037661489800",
			"name": "analysis",
			"type": "task"
		}
	]
}