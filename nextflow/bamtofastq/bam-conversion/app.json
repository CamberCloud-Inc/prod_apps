{
  "name": "bamtofastq-bam-conversion",
  "title": "BAM to FASTQ Converter",
  "description": "Convert BAM or CRAM files to FASTQ format with quality control",
  "version": "2.2.0",
  "engineType": "NEXTFLOW",
  "command": "nextflow run nf-core/bamtofastq --input ${input} --outdir ${outdir} -r 2.2.0",
  "imageUrl": "https://raw.githubusercontent.com/nf-core/bamtofastq/master/docs/images/nf-core-bamtofastq_logo_light.png",
  "content": "<div style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'><h1 style='color: #24B064; border-bottom: 3px solid #24B064; padding-bottom: 10px;'>nf-core/bamtofastq</h1><p style='font-size: 1.1em; margin-bottom: 20px;'><strong>A bioinformatics pipeline for converting BAM or CRAM files to FASTQ format with comprehensive quality control.</strong></p><h2 style='color: #24B064; margin-top: 30px;'>Pipeline Overview</h2><p>The nf-core/bamtofastq pipeline is a robust, Nextflow-based workflow that converts alignment files (BAM or CRAM) back to FASTQ format. It automatically detects read types and performs extensive quality control throughout the conversion process.</p><h2 style='color: #24B064; margin-top: 30px;'>Key Features</h2><ul style='margin-left: 20px;'><li><strong>Automatic Read Detection:</strong> Identifies single-end or paired-end reads automatically</li><li><strong>Quality Control:</strong> Performs QC on both input and output files using FastQC</li><li><strong>File Validation:</strong> Validates converted FASTQ files to ensure data integrity</li><li><strong>Flexible Input:</strong> Supports both BAM and CRAM file formats</li><li><strong>Region Filtering:</strong> Optional chromosome or region-specific read extraction</li><li><strong>Comprehensive Reports:</strong> Generates MultiQC summary reports</li><li><strong>Containerized:</strong> Uses Docker/Singularity for reproducibility</li></ul><h2 style='color: #24B064; margin-top: 30px;'>Pipeline Workflow</h2><ol style='margin-left: 20px;'><li><strong>Input QC:</strong> Quality control of input BAM/CRAM files</li><li><strong>Read Type Detection:</strong> Determine single-end or paired-end reads</li><li><strong>Statistics Computation:</strong> Calculate input file statistics</li><li><strong>Format Conversion:</strong> Convert reads to FASTQ using samtools</li><li><strong>Output QC:</strong> Quality control of converted FASTQ files</li><li><strong>Validation:</strong> Validate FASTQ file integrity</li><li><strong>Reporting:</strong> Generate comprehensive MultiQC summary</li></ol><h2 style='color: #24B064; margin-top: 30px;'>Input Requirements</h2><p>The pipeline requires a <strong>CSV samplesheet</strong> with the following columns:</p><table style='border-collapse: collapse; width: 100%; margin: 20px 0;'><thead><tr style='background-color: #24B064; color: white;'><th style='border: 1px solid #ddd; padding: 12px; text-align: left;'>Column</th><th style='border: 1px solid #ddd; padding: 12px; text-align: left;'>Description</th><th style='border: 1px solid #ddd; padding: 12px; text-align: left;'>Required</th></tr></thead><tbody><tr><td style='border: 1px solid #ddd; padding: 10px;'><code>sample_id</code></td><td style='border: 1px solid #ddd; padding: 10px;'>Unique sample identifier</td><td style='border: 1px solid #ddd; padding: 10px;'>Yes</td></tr><tr style='background-color: #f9f9f9;'><td style='border: 1px solid #ddd; padding: 10px;'><code>mapped</code></td><td style='border: 1px solid #ddd; padding: 10px;'>Path to BAM or CRAM file</td><td style='border: 1px solid #ddd; padding: 10px;'>Yes</td></tr><tr><td style='border: 1px solid #ddd; padding: 10px;'><code>index</code></td><td style='border: 1px solid #ddd; padding: 10px;'>Path to index file (.bai or .crai)</td><td style='border: 1px solid #ddd; padding: 10px;'>No</td></tr><tr style='background-color: #f9f9f9;'><td style='border: 1px solid #ddd; padding: 10px;'><code>file_type</code></td><td style='border: 1px solid #ddd; padding: 10px;'>File format (bam or cram)</td><td style='border: 1px solid #ddd; padding: 10px;'>Yes</td></tr></tbody></table><p><strong>Example samplesheet.csv:</strong></p><pre style='background-color: #f4f4f4; padding: 15px; border-left: 4px solid #24B064; overflow-x: auto;'>sample_id,mapped,index,file_type\nsample1,/path/to/sample1.bam,/path/to/sample1.bam.bai,bam\nsample2,/path/to/sample2.cram,/path/to/sample2.cram.crai,cram</pre><h2 style='color: #24B064; margin-top: 30px;'>Main Parameters</h2><ul style='margin-left: 20px;'><li><code>--input</code>: Path to samplesheet CSV file (required)</li><li><code>--outdir</code>: Output directory for results (required)</li><li><code>--chr_filter</code>: Extract reads from specific chromosome/region (optional)</li><li><code>--fasta</code>: Reference genome FASTA file for CRAM inputs (if needed)</li></ul><h2 style='color: #24B064; margin-top: 30px;'>Output Structure</h2><p>Results are organized in the output directory:</p><ul style='margin-left: 20px;'><li><code>reads/</code>: Converted FASTQ files (compressed as .fastq.gz)</li><li><code>fastqc/</code>: FastQC quality control reports</li><li><code>multiqc/</code>: Comprehensive MultiQC summary report</li><li><code>pipeline_info/</code>: Pipeline execution information</li></ul><h2 style='color: #24B064; margin-top: 30px;'>Use Cases</h2><ul style='margin-left: 20px;'><li>Recovering FASTQ files from archived BAM/CRAM data</li><li>Re-analyzing samples with different alignment tools</li><li>Extracting reads from specific genomic regions</li><li>Quality checking alignment files</li><li>Converting between alignment and raw read formats</li></ul><h2 style='color: #24B064; margin-top: 30px;'>Technical Details</h2><p><strong>Tools Used:</strong></p><ul style='margin-left: 20px;'><li>Samtools (collate and fastq conversion)</li><li>FastQC (quality control)</li><li>MultiQC (report aggregation)</li></ul><p><strong>Version:</strong> 2.2.0 (latest stable release)</p><p><strong>Citation:</strong> <a href='https://doi.org/10.5281/zenodo.4710628' style='color: #24B064;'>DOI: 10.5281/zenodo.4710628</a></p><p><strong>Documentation:</strong> <a href='https://nf-co.re/bamtofastq' style='color: #24B064;'>https://nf-co.re/bamtofastq</a></p><p><strong>GitHub:</strong> <a href='https://github.com/nf-core/bamtofastq' style='color: #24B064;'>https://github.com/nf-core/bamtofastq</a></p><h2 style='color: #24B064; margin-top: 30px;'>Credits</h2><p>Developed by <strong>Friederike Hanssen</strong> and ported to DSL2 by <strong>Susanne Jodoin</strong>, with contributions from the nf-core community.</p><div style='background-color: #e8f5e9; padding: 15px; margin-top: 30px; border-left: 4px solid #24B064;'><p style='margin: 0;'><strong>Note:</strong> This pipeline is part of the nf-core collection of high-quality, peer-reviewed bioinformatics workflows.</p></div></div>",
  "spec": [
    {"type": "Stash File", "label": "Input Samplesheet", "name": "input", "required": true, "restrictions": {"allow_files": true, "allowed_file_types": [".csv", ".tsv"]}, "description": "CSV samplesheet with columns: sample_id, mapped, index, file_type"},
    {"type": "Stash File", "label": "Output Directory", "name": "outdir", "defaultValue": "./bamtofastq-results", "required": true, "restrictions": {"allow_files": false, "allow_folders": true}, "description": "Directory where converted FASTQ files and reports will be saved"}
  ],
  "jobConfig": [{"type": "Select", "label": "Resources", "name": "system_size", "options": [{"label": "LARGE", "value": "large", "mapValue": {"nodeSize": "LARGE", "numNodes": 1, "withGpu": false}}], "defaultValue": "large"}],
  "tags": [{"name": "bamtofastq", "type": "task"}, {"name": "format-conversion", "type": "category"}, {"name": "quality-control", "type": "category"}]
}
